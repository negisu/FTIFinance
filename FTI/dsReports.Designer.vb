'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsReports"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsReports
    Inherits Global.System.Data.DataSet
    
    Private tableFTInewApply As FTInewApplyDataTable
    
    Private tableFTIconsideration1 As FTIconsideration1DataTable
    
    Private tableFTInewForApprove As FTInewForApproveDataTable
    
    Private tableFTImemberConfirm As FTImemberConfirmDataTable
    
    Private tableFTImemberApproval1 As FTImemberApproval1DataTable
    
    Private tableFTImemberApproval2 As FTImemberApproval2DataTable
    
    Private tableFTImemberChanged As FTImemberChangedDataTable
    
    Private tableFTIrepresentInfo As FTIrepresentInfoDataTable
    
    Private tableFTIconsiderationReport1 As FTIconsiderationReport1DataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("FTInewApply")) Is Nothing) Then
                MyBase.Tables.Add(New FTInewApplyDataTable(ds.Tables("FTInewApply")))
            End If
            If (Not (ds.Tables("FTIconsideration1")) Is Nothing) Then
                MyBase.Tables.Add(New FTIconsideration1DataTable(ds.Tables("FTIconsideration1")))
            End If
            If (Not (ds.Tables("FTInewForApprove")) Is Nothing) Then
                MyBase.Tables.Add(New FTInewForApproveDataTable(ds.Tables("FTInewForApprove")))
            End If
            If (Not (ds.Tables("FTImemberConfirm")) Is Nothing) Then
                MyBase.Tables.Add(New FTImemberConfirmDataTable(ds.Tables("FTImemberConfirm")))
            End If
            If (Not (ds.Tables("FTImemberApproval1")) Is Nothing) Then
                MyBase.Tables.Add(New FTImemberApproval1DataTable(ds.Tables("FTImemberApproval1")))
            End If
            If (Not (ds.Tables("FTImemberApproval2")) Is Nothing) Then
                MyBase.Tables.Add(New FTImemberApproval2DataTable(ds.Tables("FTImemberApproval2")))
            End If
            If (Not (ds.Tables("FTImemberChanged")) Is Nothing) Then
                MyBase.Tables.Add(New FTImemberChangedDataTable(ds.Tables("FTImemberChanged")))
            End If
            If (Not (ds.Tables("FTIrepresentInfo")) Is Nothing) Then
                MyBase.Tables.Add(New FTIrepresentInfoDataTable(ds.Tables("FTIrepresentInfo")))
            End If
            If (Not (ds.Tables("FTIconsiderationReport1")) Is Nothing) Then
                MyBase.Tables.Add(New FTIconsiderationReport1DataTable(ds.Tables("FTIconsiderationReport1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FTInewApply() As FTInewApplyDataTable
        Get
            Return Me.tableFTInewApply
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FTIconsideration1() As FTIconsideration1DataTable
        Get
            Return Me.tableFTIconsideration1
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FTInewForApprove() As FTInewForApproveDataTable
        Get
            Return Me.tableFTInewForApprove
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FTImemberConfirm() As FTImemberConfirmDataTable
        Get
            Return Me.tableFTImemberConfirm
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FTImemberApproval1() As FTImemberApproval1DataTable
        Get
            Return Me.tableFTImemberApproval1
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FTImemberApproval2() As FTImemberApproval2DataTable
        Get
            Return Me.tableFTImemberApproval2
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FTImemberChanged() As FTImemberChangedDataTable
        Get
            Return Me.tableFTImemberChanged
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FTIrepresentInfo() As FTIrepresentInfoDataTable
        Get
            Return Me.tableFTIrepresentInfo
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property FTIconsiderationReport1() As FTIconsiderationReport1DataTable
        Get
            Return Me.tableFTIconsiderationReport1
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsReports = CType(MyBase.Clone, dsReports)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("FTInewApply")) Is Nothing) Then
                MyBase.Tables.Add(New FTInewApplyDataTable(ds.Tables("FTInewApply")))
            End If
            If (Not (ds.Tables("FTIconsideration1")) Is Nothing) Then
                MyBase.Tables.Add(New FTIconsideration1DataTable(ds.Tables("FTIconsideration1")))
            End If
            If (Not (ds.Tables("FTInewForApprove")) Is Nothing) Then
                MyBase.Tables.Add(New FTInewForApproveDataTable(ds.Tables("FTInewForApprove")))
            End If
            If (Not (ds.Tables("FTImemberConfirm")) Is Nothing) Then
                MyBase.Tables.Add(New FTImemberConfirmDataTable(ds.Tables("FTImemberConfirm")))
            End If
            If (Not (ds.Tables("FTImemberApproval1")) Is Nothing) Then
                MyBase.Tables.Add(New FTImemberApproval1DataTable(ds.Tables("FTImemberApproval1")))
            End If
            If (Not (ds.Tables("FTImemberApproval2")) Is Nothing) Then
                MyBase.Tables.Add(New FTImemberApproval2DataTable(ds.Tables("FTImemberApproval2")))
            End If
            If (Not (ds.Tables("FTImemberChanged")) Is Nothing) Then
                MyBase.Tables.Add(New FTImemberChangedDataTable(ds.Tables("FTImemberChanged")))
            End If
            If (Not (ds.Tables("FTIrepresentInfo")) Is Nothing) Then
                MyBase.Tables.Add(New FTIrepresentInfoDataTable(ds.Tables("FTIrepresentInfo")))
            End If
            If (Not (ds.Tables("FTIconsiderationReport1")) Is Nothing) Then
                MyBase.Tables.Add(New FTIconsiderationReport1DataTable(ds.Tables("FTIconsiderationReport1")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableFTInewApply = CType(MyBase.Tables("FTInewApply"), FTInewApplyDataTable)
        If (initTable = True) Then
            If (Not (Me.tableFTInewApply) Is Nothing) Then
                Me.tableFTInewApply.InitVars()
            End If
        End If
        Me.tableFTIconsideration1 = CType(MyBase.Tables("FTIconsideration1"), FTIconsideration1DataTable)
        If (initTable = True) Then
            If (Not (Me.tableFTIconsideration1) Is Nothing) Then
                Me.tableFTIconsideration1.InitVars()
            End If
        End If
        Me.tableFTInewForApprove = CType(MyBase.Tables("FTInewForApprove"), FTInewForApproveDataTable)
        If (initTable = True) Then
            If (Not (Me.tableFTInewForApprove) Is Nothing) Then
                Me.tableFTInewForApprove.InitVars()
            End If
        End If
        Me.tableFTImemberConfirm = CType(MyBase.Tables("FTImemberConfirm"), FTImemberConfirmDataTable)
        If (initTable = True) Then
            If (Not (Me.tableFTImemberConfirm) Is Nothing) Then
                Me.tableFTImemberConfirm.InitVars()
            End If
        End If
        Me.tableFTImemberApproval1 = CType(MyBase.Tables("FTImemberApproval1"), FTImemberApproval1DataTable)
        If (initTable = True) Then
            If (Not (Me.tableFTImemberApproval1) Is Nothing) Then
                Me.tableFTImemberApproval1.InitVars()
            End If
        End If
        Me.tableFTImemberApproval2 = CType(MyBase.Tables("FTImemberApproval2"), FTImemberApproval2DataTable)
        If (initTable = True) Then
            If (Not (Me.tableFTImemberApproval2) Is Nothing) Then
                Me.tableFTImemberApproval2.InitVars()
            End If
        End If
        Me.tableFTImemberChanged = CType(MyBase.Tables("FTImemberChanged"), FTImemberChangedDataTable)
        If (initTable = True) Then
            If (Not (Me.tableFTImemberChanged) Is Nothing) Then
                Me.tableFTImemberChanged.InitVars()
            End If
        End If
        Me.tableFTIrepresentInfo = CType(MyBase.Tables("FTIrepresentInfo"), FTIrepresentInfoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableFTIrepresentInfo) Is Nothing) Then
                Me.tableFTIrepresentInfo.InitVars()
            End If
        End If
        Me.tableFTIconsiderationReport1 = CType(MyBase.Tables("FTIconsiderationReport1"), FTIconsiderationReport1DataTable)
        If (initTable = True) Then
            If (Not (Me.tableFTIconsiderationReport1) Is Nothing) Then
                Me.tableFTIconsiderationReport1.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "dsReports"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsReports.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableFTInewApply = New FTInewApplyDataTable()
        MyBase.Tables.Add(Me.tableFTInewApply)
        Me.tableFTIconsideration1 = New FTIconsideration1DataTable()
        MyBase.Tables.Add(Me.tableFTIconsideration1)
        Me.tableFTInewForApprove = New FTInewForApproveDataTable()
        MyBase.Tables.Add(Me.tableFTInewForApprove)
        Me.tableFTImemberConfirm = New FTImemberConfirmDataTable()
        MyBase.Tables.Add(Me.tableFTImemberConfirm)
        Me.tableFTImemberApproval1 = New FTImemberApproval1DataTable()
        MyBase.Tables.Add(Me.tableFTImemberApproval1)
        Me.tableFTImemberApproval2 = New FTImemberApproval2DataTable()
        MyBase.Tables.Add(Me.tableFTImemberApproval2)
        Me.tableFTImemberChanged = New FTImemberChangedDataTable()
        MyBase.Tables.Add(Me.tableFTImemberChanged)
        Me.tableFTIrepresentInfo = New FTIrepresentInfoDataTable()
        MyBase.Tables.Add(Me.tableFTIrepresentInfo)
        Me.tableFTIconsiderationReport1 = New FTIconsiderationReport1DataTable()
        MyBase.Tables.Add(Me.tableFTIconsiderationReport1)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFTInewApply() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFTIconsideration1() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFTInewForApprove() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFTImemberConfirm() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFTImemberApproval1() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFTImemberApproval2() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFTImemberChanged() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFTIrepresentInfo() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeFTIconsiderationReport1() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsReports = New dsReports()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FTInewApplyRowChangeEventHandler(ByVal sender As Object, ByVal e As FTInewApplyRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FTIconsideration1RowChangeEventHandler(ByVal sender As Object, ByVal e As FTIconsideration1RowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FTInewForApproveRowChangeEventHandler(ByVal sender As Object, ByVal e As FTInewForApproveRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FTImemberConfirmRowChangeEventHandler(ByVal sender As Object, ByVal e As FTImemberConfirmRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FTImemberApproval1RowChangeEventHandler(ByVal sender As Object, ByVal e As FTImemberApproval1RowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FTImemberApproval2RowChangeEventHandler(ByVal sender As Object, ByVal e As FTImemberApproval2RowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FTImemberChangedRowChangeEventHandler(ByVal sender As Object, ByVal e As FTImemberChangedRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FTIrepresentInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As FTIrepresentInfoRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub FTIconsiderationReport1RowChangeEventHandler(ByVal sender As Object, ByVal e As FTIconsiderationReport1RowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FTInewApplyDataTable
        Inherits Global.System.Data.TypedTableBase(Of FTInewApplyRow)

        Private columnREGIST_CODE As Global.System.Data.DataColumn

        Private columnCOMP_PERSON_NAME_TH As Global.System.Data.DataColumn

        Private columnCOMP_PERSON_NAME_EN As Global.System.Data.DataColumn

        Private columnREGIST_DATE As Global.System.Data.DataColumn

        Private columnMEMBER_CODE As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FTInewApply"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REGIST_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGIST_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMP_PERSON_NAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMP_PERSON_NAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMP_PERSON_NAME_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMP_PERSON_NAME_EN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REGIST_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGIST_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FTInewApplyRow
            Get
                Return CType(Me.Rows(index), FTInewApplyRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTInewApplyRowChanging As FTInewApplyRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTInewApplyRowChanged As FTInewApplyRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTInewApplyRowDeleting As FTInewApplyRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTInewApplyRowDeleted As FTInewApplyRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFTInewApplyRow(ByVal row As FTInewApplyRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFTInewApplyRow(ByVal REGIST_CODE As String, ByVal COMP_PERSON_NAME_TH As String, ByVal COMP_PERSON_NAME_EN As String, ByVal REGIST_DATE As Date, ByVal MEMBER_CODE As String) As FTInewApplyRow
            Dim rowFTInewApplyRow As FTInewApplyRow = CType(Me.NewRow, FTInewApplyRow)
            Dim columnValuesArray() As Object = New Object() {REGIST_CODE, COMP_PERSON_NAME_TH, COMP_PERSON_NAME_EN, REGIST_DATE, MEMBER_CODE}
            rowFTInewApplyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTInewApplyRow)
            Return rowFTInewApplyRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByREGIST_CODE(ByVal REGIST_CODE As String) As FTInewApplyRow
            Return CType(Me.Rows.Find(New Object() {REGIST_CODE}), FTInewApplyRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTInewApplyDataTable = CType(MyBase.Clone, FTInewApplyDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTInewApplyDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnREGIST_CODE = MyBase.Columns("REGIST_CODE")
            Me.columnCOMP_PERSON_NAME_TH = MyBase.Columns("COMP_PERSON_NAME_TH")
            Me.columnCOMP_PERSON_NAME_EN = MyBase.Columns("COMP_PERSON_NAME_EN")
            Me.columnREGIST_DATE = MyBase.Columns("REGIST_DATE")
            Me.columnMEMBER_CODE = MyBase.Columns("MEMBER_CODE")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnREGIST_CODE = New Global.System.Data.DataColumn("REGIST_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGIST_CODE)
            Me.columnCOMP_PERSON_NAME_TH = New Global.System.Data.DataColumn("COMP_PERSON_NAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMP_PERSON_NAME_TH)
            Me.columnCOMP_PERSON_NAME_EN = New Global.System.Data.DataColumn("COMP_PERSON_NAME_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMP_PERSON_NAME_EN)
            Me.columnREGIST_DATE = New Global.System.Data.DataColumn("REGIST_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGIST_DATE)
            Me.columnMEMBER_CODE = New Global.System.Data.DataColumn("MEMBER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_CODE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnREGIST_CODE}, True))
            Me.columnREGIST_CODE.AllowDBNull = False
            Me.columnREGIST_CODE.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFTInewApplyRow() As FTInewApplyRow
            Return CType(Me.NewRow, FTInewApplyRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTInewApplyRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTInewApplyRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTInewApplyRowChangedEvent) Is Nothing) Then
                RaiseEvent FTInewApplyRowChanged(Me, New FTInewApplyRowChangeEvent(CType(e.Row, FTInewApplyRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTInewApplyRowChangingEvent) Is Nothing) Then
                RaiseEvent FTInewApplyRowChanging(Me, New FTInewApplyRowChangeEvent(CType(e.Row, FTInewApplyRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTInewApplyRowDeletedEvent) Is Nothing) Then
                RaiseEvent FTInewApplyRowDeleted(Me, New FTInewApplyRowChangeEvent(CType(e.Row, FTInewApplyRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTInewApplyRowDeletingEvent) Is Nothing) Then
                RaiseEvent FTInewApplyRowDeleting(Me, New FTInewApplyRowChangeEvent(CType(e.Row, FTInewApplyRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFTInewApplyRow(ByVal row As FTInewApplyRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReports = New dsReports()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTInewApplyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FTIconsideration1DataTable
        Inherits Global.System.Data.TypedTableBase(Of FTIconsideration1Row)

        Private columnMEMBER_MAIN_GROUP_CODE As Global.System.Data.DataColumn

        Private columnMEMBER_GROUP_CODE As Global.System.Data.DataColumn

        Private columnMEMBER_MAIN_TYPE_CODE As Global.System.Data.DataColumn

        Private columnMEMBER_TYPE_CODE As Global.System.Data.DataColumn

        Private columnMEMBER_GROUP_RDLC_GROUP As Global.System.Data.DataColumn

        Private columnQTY As Global.System.Data.DataColumn

        Private columnQTY_VALUE As Global.System.Data.DataColumn

        Private columnMEMBER_GROUP_NAME As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FTIconsideration1"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_MAIN_GROUP_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_MAIN_GROUP_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_GROUP_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_GROUP_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_MAIN_TYPE_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_MAIN_TYPE_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_TYPE_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_TYPE_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_GROUP_RDLC_GROUPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_GROUP_RDLC_GROUP
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QTY_VALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY_VALUE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_GROUP_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_GROUP_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FTIconsideration1Row
            Get
                Return CType(Me.Rows(index), FTIconsideration1Row)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIconsideration1RowChanging As FTIconsideration1RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIconsideration1RowChanged As FTIconsideration1RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIconsideration1RowDeleting As FTIconsideration1RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIconsideration1RowDeleted As FTIconsideration1RowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFTIconsideration1Row(ByVal row As FTIconsideration1Row)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFTIconsideration1Row(ByVal MEMBER_MAIN_GROUP_CODE As String, ByVal MEMBER_GROUP_CODE As String, ByVal MEMBER_MAIN_TYPE_CODE As String, ByVal MEMBER_TYPE_CODE As String, ByVal MEMBER_GROUP_RDLC_GROUP As String, ByVal QTY As Decimal, ByVal QTY_VALUE As Decimal, ByVal MEMBER_GROUP_NAME As String) As FTIconsideration1Row
            Dim rowFTIconsideration1Row As FTIconsideration1Row = CType(Me.NewRow, FTIconsideration1Row)
            Dim columnValuesArray() As Object = New Object() {MEMBER_MAIN_GROUP_CODE, MEMBER_GROUP_CODE, MEMBER_MAIN_TYPE_CODE, MEMBER_TYPE_CODE, MEMBER_GROUP_RDLC_GROUP, QTY, QTY_VALUE, MEMBER_GROUP_NAME}
            rowFTIconsideration1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTIconsideration1Row)
            Return rowFTIconsideration1Row
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTIconsideration1DataTable = CType(MyBase.Clone, FTIconsideration1DataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTIconsideration1DataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnMEMBER_MAIN_GROUP_CODE = MyBase.Columns("MEMBER_MAIN_GROUP_CODE")
            Me.columnMEMBER_GROUP_CODE = MyBase.Columns("MEMBER_GROUP_CODE")
            Me.columnMEMBER_MAIN_TYPE_CODE = MyBase.Columns("MEMBER_MAIN_TYPE_CODE")
            Me.columnMEMBER_TYPE_CODE = MyBase.Columns("MEMBER_TYPE_CODE")
            Me.columnMEMBER_GROUP_RDLC_GROUP = MyBase.Columns("MEMBER_GROUP_RDLC_GROUP")
            Me.columnQTY = MyBase.Columns("QTY")
            Me.columnQTY_VALUE = MyBase.Columns("QTY_VALUE")
            Me.columnMEMBER_GROUP_NAME = MyBase.Columns("MEMBER_GROUP_NAME")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnMEMBER_MAIN_GROUP_CODE = New Global.System.Data.DataColumn("MEMBER_MAIN_GROUP_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_MAIN_GROUP_CODE)
            Me.columnMEMBER_GROUP_CODE = New Global.System.Data.DataColumn("MEMBER_GROUP_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_GROUP_CODE)
            Me.columnMEMBER_MAIN_TYPE_CODE = New Global.System.Data.DataColumn("MEMBER_MAIN_TYPE_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_MAIN_TYPE_CODE)
            Me.columnMEMBER_TYPE_CODE = New Global.System.Data.DataColumn("MEMBER_TYPE_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_TYPE_CODE)
            Me.columnMEMBER_GROUP_RDLC_GROUP = New Global.System.Data.DataColumn("MEMBER_GROUP_RDLC_GROUP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_GROUP_RDLC_GROUP)
            Me.columnQTY = New Global.System.Data.DataColumn("QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY)
            Me.columnQTY_VALUE = New Global.System.Data.DataColumn("QTY_VALUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY_VALUE)
            Me.columnMEMBER_GROUP_NAME = New Global.System.Data.DataColumn("MEMBER_GROUP_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_GROUP_NAME)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFTIconsideration1Row() As FTIconsideration1Row
            Return CType(Me.NewRow, FTIconsideration1Row)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTIconsideration1Row(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTIconsideration1Row)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTIconsideration1RowChangedEvent) Is Nothing) Then
                RaiseEvent FTIconsideration1RowChanged(Me, New FTIconsideration1RowChangeEvent(CType(e.Row, FTIconsideration1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTIconsideration1RowChangingEvent) Is Nothing) Then
                RaiseEvent FTIconsideration1RowChanging(Me, New FTIconsideration1RowChangeEvent(CType(e.Row, FTIconsideration1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTIconsideration1RowDeletedEvent) Is Nothing) Then
                RaiseEvent FTIconsideration1RowDeleted(Me, New FTIconsideration1RowChangeEvent(CType(e.Row, FTIconsideration1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTIconsideration1RowDeletingEvent) Is Nothing) Then
                RaiseEvent FTIconsideration1RowDeleting(Me, New FTIconsideration1RowChangeEvent(CType(e.Row, FTIconsideration1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFTIconsideration1Row(ByVal row As FTIconsideration1Row)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReports = New dsReports()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTIconsideration1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FTInewForApproveDataTable
        Inherits Global.System.Data.TypedTableBase(Of FTInewForApproveRow)

        Private columnROW_NO As Global.System.Data.DataColumn

        Private columnMEMBER_CODE As Global.System.Data.DataColumn

        Private columnCOMP_PERSON_NAME_TH As Global.System.Data.DataColumn

        Private columnCONTACT_NAME_TH As Global.System.Data.DataColumn

        Private columnMAIN_PRODUCTS_SERVICES As Global.System.Data.DataColumn

        Private columnMEMBER_GROUP As Global.System.Data.DataColumn

        Private columnMEMBER_PROVINCE As Global.System.Data.DataColumn

        Private columnADDR_PROVINCE_NAME As Global.System.Data.DataColumn

        Private columnADDR_TELEPHONE As Global.System.Data.DataColumn

        Private columnFIRST_REGIST_RATE As Global.System.Data.DataColumn

        Private columnFIRST_YEAR_RATE As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FTInewForApprove"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ROW_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROW_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMP_PERSON_NAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMP_PERSON_NAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACT_NAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT_NAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MAIN_PRODUCTS_SERVICESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAIN_PRODUCTS_SERVICES
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_GROUPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_GROUP
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_PROVINCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_PROVINCE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_PROVINCE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_PROVINCE_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_TELEPHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_TELEPHONE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FIRST_REGIST_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRST_REGIST_RATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FIRST_YEAR_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRST_YEAR_RATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FTInewForApproveRow
            Get
                Return CType(Me.Rows(index), FTInewForApproveRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTInewForApproveRowChanging As FTInewForApproveRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTInewForApproveRowChanged As FTInewForApproveRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTInewForApproveRowDeleting As FTInewForApproveRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTInewForApproveRowDeleted As FTInewForApproveRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFTInewForApproveRow(ByVal row As FTInewForApproveRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFTInewForApproveRow(ByVal ROW_NO As Integer, ByVal MEMBER_CODE As String, ByVal COMP_PERSON_NAME_TH As String, ByVal CONTACT_NAME_TH As String, ByVal MAIN_PRODUCTS_SERVICES As String, ByVal MEMBER_GROUP As String, ByVal MEMBER_PROVINCE As String, ByVal ADDR_PROVINCE_NAME As String, ByVal ADDR_TELEPHONE As String, ByVal FIRST_REGIST_RATE As Decimal, ByVal FIRST_YEAR_RATE As Decimal) As FTInewForApproveRow
            Dim rowFTInewForApproveRow As FTInewForApproveRow = CType(Me.NewRow, FTInewForApproveRow)
            Dim columnValuesArray() As Object = New Object() {ROW_NO, MEMBER_CODE, COMP_PERSON_NAME_TH, CONTACT_NAME_TH, MAIN_PRODUCTS_SERVICES, MEMBER_GROUP, MEMBER_PROVINCE, ADDR_PROVINCE_NAME, ADDR_TELEPHONE, FIRST_REGIST_RATE, FIRST_YEAR_RATE}
            rowFTInewForApproveRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTInewForApproveRow)
            Return rowFTInewForApproveRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByMEMBER_CODE(ByVal MEMBER_CODE As String) As FTInewForApproveRow
            Return CType(Me.Rows.Find(New Object() {MEMBER_CODE}), FTInewForApproveRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTInewForApproveDataTable = CType(MyBase.Clone, FTInewForApproveDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTInewForApproveDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnROW_NO = MyBase.Columns("ROW_NO")
            Me.columnMEMBER_CODE = MyBase.Columns("MEMBER_CODE")
            Me.columnCOMP_PERSON_NAME_TH = MyBase.Columns("COMP_PERSON_NAME_TH")
            Me.columnCONTACT_NAME_TH = MyBase.Columns("CONTACT_NAME_TH")
            Me.columnMAIN_PRODUCTS_SERVICES = MyBase.Columns("MAIN_PRODUCTS_SERVICES")
            Me.columnMEMBER_GROUP = MyBase.Columns("MEMBER_GROUP")
            Me.columnMEMBER_PROVINCE = MyBase.Columns("MEMBER_PROVINCE")
            Me.columnADDR_PROVINCE_NAME = MyBase.Columns("ADDR_PROVINCE_NAME")
            Me.columnADDR_TELEPHONE = MyBase.Columns("ADDR_TELEPHONE")
            Me.columnFIRST_REGIST_RATE = MyBase.Columns("FIRST_REGIST_RATE")
            Me.columnFIRST_YEAR_RATE = MyBase.Columns("FIRST_YEAR_RATE")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnROW_NO = New Global.System.Data.DataColumn("ROW_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROW_NO)
            Me.columnMEMBER_CODE = New Global.System.Data.DataColumn("MEMBER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_CODE)
            Me.columnCOMP_PERSON_NAME_TH = New Global.System.Data.DataColumn("COMP_PERSON_NAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMP_PERSON_NAME_TH)
            Me.columnCONTACT_NAME_TH = New Global.System.Data.DataColumn("CONTACT_NAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT_NAME_TH)
            Me.columnMAIN_PRODUCTS_SERVICES = New Global.System.Data.DataColumn("MAIN_PRODUCTS_SERVICES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAIN_PRODUCTS_SERVICES)
            Me.columnMEMBER_GROUP = New Global.System.Data.DataColumn("MEMBER_GROUP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_GROUP)
            Me.columnMEMBER_PROVINCE = New Global.System.Data.DataColumn("MEMBER_PROVINCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_PROVINCE)
            Me.columnADDR_PROVINCE_NAME = New Global.System.Data.DataColumn("ADDR_PROVINCE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_PROVINCE_NAME)
            Me.columnADDR_TELEPHONE = New Global.System.Data.DataColumn("ADDR_TELEPHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_TELEPHONE)
            Me.columnFIRST_REGIST_RATE = New Global.System.Data.DataColumn("FIRST_REGIST_RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRST_REGIST_RATE)
            Me.columnFIRST_YEAR_RATE = New Global.System.Data.DataColumn("FIRST_YEAR_RATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRST_YEAR_RATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnMEMBER_CODE}, True))
            Me.columnMEMBER_CODE.AllowDBNull = False
            Me.columnMEMBER_CODE.Unique = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFTInewForApproveRow() As FTInewForApproveRow
            Return CType(Me.NewRow, FTInewForApproveRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTInewForApproveRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTInewForApproveRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTInewForApproveRowChangedEvent) Is Nothing) Then
                RaiseEvent FTInewForApproveRowChanged(Me, New FTInewForApproveRowChangeEvent(CType(e.Row, FTInewForApproveRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTInewForApproveRowChangingEvent) Is Nothing) Then
                RaiseEvent FTInewForApproveRowChanging(Me, New FTInewForApproveRowChangeEvent(CType(e.Row, FTInewForApproveRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTInewForApproveRowDeletedEvent) Is Nothing) Then
                RaiseEvent FTInewForApproveRowDeleted(Me, New FTInewForApproveRowChangeEvent(CType(e.Row, FTInewForApproveRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTInewForApproveRowDeletingEvent) Is Nothing) Then
                RaiseEvent FTInewForApproveRowDeleting(Me, New FTInewForApproveRowChangeEvent(CType(e.Row, FTInewForApproveRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFTInewForApproveRow(ByVal row As FTInewForApproveRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReports = New dsReports()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTInewForApproveDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FTImemberConfirmDataTable
        Inherits Global.System.Data.TypedTableBase(Of FTImemberConfirmRow)

        Private columnMEMBER_CODE As Global.System.Data.DataColumn

        Private columnPRENAME_TH As Global.System.Data.DataColumn

        Private columnCOMP_PERSON_NAME_TH As Global.System.Data.DataColumn

        Private columnADDR_NO As Global.System.Data.DataColumn

        Private columnADDR_MOO As Global.System.Data.DataColumn

        Private columnADDR_SOI As Global.System.Data.DataColumn

        Private columnADDR_ROAD As Global.System.Data.DataColumn

        Private columnADDR_SUB_DISTRICT As Global.System.Data.DataColumn

        Private columnADDR_DISTRICT As Global.System.Data.DataColumn

        Private columnADDR_PROVINCE_NAME As Global.System.Data.DataColumn

        Private columnADDR_POSTCODE As Global.System.Data.DataColumn

        Private columnADDR_TELEPHONE As Global.System.Data.DataColumn

        Private columnADDR_FAX As Global.System.Data.DataColumn

        Private columnADDR_EMAIL As Global.System.Data.DataColumn

        Private columnADDR_WEBSITE As Global.System.Data.DataColumn

        Private columnMEMBER_GROUP_NAME As Global.System.Data.DataColumn

        Private columnCONTACT1_TH As Global.System.Data.DataColumn

        Private columnCONTACT1_EN As Global.System.Data.DataColumn

        Private columnCONTACT2_TH As Global.System.Data.DataColumn

        Private columnCONTACT2_EN As Global.System.Data.DataColumn

        Private columnCONTACT3_TH As Global.System.Data.DataColumn

        Private columnCONTACT3_EN As Global.System.Data.DataColumn

        Private columnREGIST_CAPITAL As Global.System.Data.DataColumn

        Private columnEMPLOYEE_AMOUNT As Global.System.Data.DataColumn

        Private columnASSET1 As Global.System.Data.DataColumn

        Private columnASSET2 As Global.System.Data.DataColumn

        Private columnASSET3 As Global.System.Data.DataColumn

        Private columnASSET4 As Global.System.Data.DataColumn

        Private columnELECT1 As Global.System.Data.DataColumn

        Private columnELECT2 As Global.System.Data.DataColumn

        Private columnPRODUCE_TECHNOLOGY_TH As Global.System.Data.DataColumn

        Private columnPRODUCE_TECHNOLOGY_EN As Global.System.Data.DataColumn

        Private columnPRODUCE_TECHNOLOGY_DESC As Global.System.Data.DataColumn

        Private columnBUS_TYPE_RELATE As Global.System.Data.DataColumn

        Private columnBUS_TYPE_DEALER As Global.System.Data.DataColumn

        Private columnBUS_TYPE_IMPORTER As Global.System.Data.DataColumn

        Private columnBUS_TYPE_EXPORTER As Global.System.Data.DataColumn

        Private columnBUS_TYPE_OTHER As Global.System.Data.DataColumn

        Private columnREMAINDER As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FTImemberConfirm"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRENAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRENAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMP_PERSON_NAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMP_PERSON_NAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_MOOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_MOO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_SOIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_SOI
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_ROADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_ROAD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_SUB_DISTRICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_SUB_DISTRICT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_DISTRICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_DISTRICT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_PROVINCE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_PROVINCE_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_POSTCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_TELEPHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_TELEPHONE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_FAX
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_EMAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADDR_WEBSITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDR_WEBSITE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_GROUP_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_GROUP_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACT1_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT1_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACT1_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT1_EN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACT2_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT2_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACT2_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT2_EN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACT3_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT3_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONTACT3_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT3_EN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REGIST_CAPITALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGIST_CAPITAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EMPLOYEE_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPLOYEE_AMOUNT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ASSET1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSET1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ASSET2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSET2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ASSET3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSET3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ASSET4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSET4
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ELECT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnELECT1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ELECT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnELECT2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRODUCE_TECHNOLOGY_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCE_TECHNOLOGY_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRODUCE_TECHNOLOGY_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCE_TECHNOLOGY_EN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRODUCE_TECHNOLOGY_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCE_TECHNOLOGY_DESC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BUS_TYPE_RELATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_TYPE_RELATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BUS_TYPE_DEALERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_TYPE_DEALER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BUS_TYPE_IMPORTERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_TYPE_IMPORTER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BUS_TYPE_EXPORTERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_TYPE_EXPORTER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BUS_TYPE_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_TYPE_OTHER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REMAINDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREMAINDER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FTImemberConfirmRow
            Get
                Return CType(Me.Rows(index), FTImemberConfirmRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberConfirmRowChanging As FTImemberConfirmRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberConfirmRowChanged As FTImemberConfirmRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberConfirmRowDeleting As FTImemberConfirmRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberConfirmRowDeleted As FTImemberConfirmRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFTImemberConfirmRow(ByVal row As FTImemberConfirmRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFTImemberConfirmRow( _
                    ByVal MEMBER_CODE As String, _
                    ByVal PRENAME_TH As String, _
                    ByVal COMP_PERSON_NAME_TH As String, _
                    ByVal ADDR_NO As String, _
                    ByVal ADDR_MOO As String, _
                    ByVal ADDR_SOI As String, _
                    ByVal ADDR_ROAD As String, _
                    ByVal ADDR_SUB_DISTRICT As String, _
                    ByVal ADDR_DISTRICT As String, _
                    ByVal ADDR_PROVINCE_NAME As String, _
                    ByVal ADDR_POSTCODE As String, _
                    ByVal ADDR_TELEPHONE As String, _
                    ByVal ADDR_FAX As String, _
                    ByVal ADDR_EMAIL As String, _
                    ByVal ADDR_WEBSITE As String, _
                    ByVal MEMBER_GROUP_NAME As String, _
                    ByVal CONTACT1_TH As String, _
                    ByVal CONTACT1_EN As String, _
                    ByVal CONTACT2_TH As String, _
                    ByVal CONTACT2_EN As String, _
                    ByVal CONTACT3_TH As String, _
                    ByVal CONTACT3_EN As String, _
                    ByVal REGIST_CAPITAL As Decimal, _
                    ByVal EMPLOYEE_AMOUNT As Decimal, _
                    ByVal ASSET1 As Boolean, _
                    ByVal ASSET2 As Boolean, _
                    ByVal ASSET3 As Boolean, _
                    ByVal ASSET4 As Boolean, _
                    ByVal ELECT1 As Boolean, _
                    ByVal ELECT2 As Boolean, _
                    ByVal PRODUCE_TECHNOLOGY_TH As Boolean, _
                    ByVal PRODUCE_TECHNOLOGY_EN As Boolean, _
                    ByVal PRODUCE_TECHNOLOGY_DESC As String, _
                    ByVal BUS_TYPE_RELATE As Boolean, _
                    ByVal BUS_TYPE_DEALER As Boolean, _
                    ByVal BUS_TYPE_IMPORTER As Boolean, _
                    ByVal BUS_TYPE_EXPORTER As Boolean, _
                    ByVal BUS_TYPE_OTHER As String, _
                    ByVal REMAINDER As Integer) As FTImemberConfirmRow
            Dim rowFTImemberConfirmRow As FTImemberConfirmRow = CType(Me.NewRow, FTImemberConfirmRow)
            Dim columnValuesArray() As Object = New Object() {MEMBER_CODE, PRENAME_TH, COMP_PERSON_NAME_TH, ADDR_NO, ADDR_MOO, ADDR_SOI, ADDR_ROAD, ADDR_SUB_DISTRICT, ADDR_DISTRICT, ADDR_PROVINCE_NAME, ADDR_POSTCODE, ADDR_TELEPHONE, ADDR_FAX, ADDR_EMAIL, ADDR_WEBSITE, MEMBER_GROUP_NAME, CONTACT1_TH, CONTACT1_EN, CONTACT2_TH, CONTACT2_EN, CONTACT3_TH, CONTACT3_EN, REGIST_CAPITAL, EMPLOYEE_AMOUNT, ASSET1, ASSET2, ASSET3, ASSET4, ELECT1, ELECT2, PRODUCE_TECHNOLOGY_TH, PRODUCE_TECHNOLOGY_EN, PRODUCE_TECHNOLOGY_DESC, BUS_TYPE_RELATE, BUS_TYPE_DEALER, BUS_TYPE_IMPORTER, BUS_TYPE_EXPORTER, BUS_TYPE_OTHER, REMAINDER}
            rowFTImemberConfirmRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTImemberConfirmRow)
            Return rowFTImemberConfirmRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTImemberConfirmDataTable = CType(MyBase.Clone, FTImemberConfirmDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTImemberConfirmDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnMEMBER_CODE = MyBase.Columns("MEMBER_CODE")
            Me.columnPRENAME_TH = MyBase.Columns("PRENAME_TH")
            Me.columnCOMP_PERSON_NAME_TH = MyBase.Columns("COMP_PERSON_NAME_TH")
            Me.columnADDR_NO = MyBase.Columns("ADDR_NO")
            Me.columnADDR_MOO = MyBase.Columns("ADDR_MOO")
            Me.columnADDR_SOI = MyBase.Columns("ADDR_SOI")
            Me.columnADDR_ROAD = MyBase.Columns("ADDR_ROAD")
            Me.columnADDR_SUB_DISTRICT = MyBase.Columns("ADDR_SUB_DISTRICT")
            Me.columnADDR_DISTRICT = MyBase.Columns("ADDR_DISTRICT")
            Me.columnADDR_PROVINCE_NAME = MyBase.Columns("ADDR_PROVINCE_NAME")
            Me.columnADDR_POSTCODE = MyBase.Columns("ADDR_POSTCODE")
            Me.columnADDR_TELEPHONE = MyBase.Columns("ADDR_TELEPHONE")
            Me.columnADDR_FAX = MyBase.Columns("ADDR_FAX")
            Me.columnADDR_EMAIL = MyBase.Columns("ADDR_EMAIL")
            Me.columnADDR_WEBSITE = MyBase.Columns("ADDR_WEBSITE")
            Me.columnMEMBER_GROUP_NAME = MyBase.Columns("MEMBER_GROUP_NAME")
            Me.columnCONTACT1_TH = MyBase.Columns("CONTACT1_TH")
            Me.columnCONTACT1_EN = MyBase.Columns("CONTACT1_EN")
            Me.columnCONTACT2_TH = MyBase.Columns("CONTACT2_TH")
            Me.columnCONTACT2_EN = MyBase.Columns("CONTACT2_EN")
            Me.columnCONTACT3_TH = MyBase.Columns("CONTACT3_TH")
            Me.columnCONTACT3_EN = MyBase.Columns("CONTACT3_EN")
            Me.columnREGIST_CAPITAL = MyBase.Columns("REGIST_CAPITAL")
            Me.columnEMPLOYEE_AMOUNT = MyBase.Columns("EMPLOYEE_AMOUNT")
            Me.columnASSET1 = MyBase.Columns("ASSET1")
            Me.columnASSET2 = MyBase.Columns("ASSET2")
            Me.columnASSET3 = MyBase.Columns("ASSET3")
            Me.columnASSET4 = MyBase.Columns("ASSET4")
            Me.columnELECT1 = MyBase.Columns("ELECT1")
            Me.columnELECT2 = MyBase.Columns("ELECT2")
            Me.columnPRODUCE_TECHNOLOGY_TH = MyBase.Columns("PRODUCE_TECHNOLOGY_TH")
            Me.columnPRODUCE_TECHNOLOGY_EN = MyBase.Columns("PRODUCE_TECHNOLOGY_EN")
            Me.columnPRODUCE_TECHNOLOGY_DESC = MyBase.Columns("PRODUCE_TECHNOLOGY_DESC")
            Me.columnBUS_TYPE_RELATE = MyBase.Columns("BUS_TYPE_RELATE")
            Me.columnBUS_TYPE_DEALER = MyBase.Columns("BUS_TYPE_DEALER")
            Me.columnBUS_TYPE_IMPORTER = MyBase.Columns("BUS_TYPE_IMPORTER")
            Me.columnBUS_TYPE_EXPORTER = MyBase.Columns("BUS_TYPE_EXPORTER")
            Me.columnBUS_TYPE_OTHER = MyBase.Columns("BUS_TYPE_OTHER")
            Me.columnREMAINDER = MyBase.Columns("REMAINDER")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnMEMBER_CODE = New Global.System.Data.DataColumn("MEMBER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_CODE)
            Me.columnPRENAME_TH = New Global.System.Data.DataColumn("PRENAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRENAME_TH)
            Me.columnCOMP_PERSON_NAME_TH = New Global.System.Data.DataColumn("COMP_PERSON_NAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMP_PERSON_NAME_TH)
            Me.columnADDR_NO = New Global.System.Data.DataColumn("ADDR_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_NO)
            Me.columnADDR_MOO = New Global.System.Data.DataColumn("ADDR_MOO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_MOO)
            Me.columnADDR_SOI = New Global.System.Data.DataColumn("ADDR_SOI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_SOI)
            Me.columnADDR_ROAD = New Global.System.Data.DataColumn("ADDR_ROAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_ROAD)
            Me.columnADDR_SUB_DISTRICT = New Global.System.Data.DataColumn("ADDR_SUB_DISTRICT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_SUB_DISTRICT)
            Me.columnADDR_DISTRICT = New Global.System.Data.DataColumn("ADDR_DISTRICT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_DISTRICT)
            Me.columnADDR_PROVINCE_NAME = New Global.System.Data.DataColumn("ADDR_PROVINCE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_PROVINCE_NAME)
            Me.columnADDR_POSTCODE = New Global.System.Data.DataColumn("ADDR_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_POSTCODE)
            Me.columnADDR_TELEPHONE = New Global.System.Data.DataColumn("ADDR_TELEPHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_TELEPHONE)
            Me.columnADDR_FAX = New Global.System.Data.DataColumn("ADDR_FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_FAX)
            Me.columnADDR_EMAIL = New Global.System.Data.DataColumn("ADDR_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_EMAIL)
            Me.columnADDR_WEBSITE = New Global.System.Data.DataColumn("ADDR_WEBSITE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDR_WEBSITE)
            Me.columnMEMBER_GROUP_NAME = New Global.System.Data.DataColumn("MEMBER_GROUP_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_GROUP_NAME)
            Me.columnCONTACT1_TH = New Global.System.Data.DataColumn("CONTACT1_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT1_TH)
            Me.columnCONTACT1_EN = New Global.System.Data.DataColumn("CONTACT1_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT1_EN)
            Me.columnCONTACT2_TH = New Global.System.Data.DataColumn("CONTACT2_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT2_TH)
            Me.columnCONTACT2_EN = New Global.System.Data.DataColumn("CONTACT2_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT2_EN)
            Me.columnCONTACT3_TH = New Global.System.Data.DataColumn("CONTACT3_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT3_TH)
            Me.columnCONTACT3_EN = New Global.System.Data.DataColumn("CONTACT3_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT3_EN)
            Me.columnREGIST_CAPITAL = New Global.System.Data.DataColumn("REGIST_CAPITAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGIST_CAPITAL)
            Me.columnEMPLOYEE_AMOUNT = New Global.System.Data.DataColumn("EMPLOYEE_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPLOYEE_AMOUNT)
            Me.columnASSET1 = New Global.System.Data.DataColumn("ASSET1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSET1)
            Me.columnASSET2 = New Global.System.Data.DataColumn("ASSET2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSET2)
            Me.columnASSET3 = New Global.System.Data.DataColumn("ASSET3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSET3)
            Me.columnASSET4 = New Global.System.Data.DataColumn("ASSET4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSET4)
            Me.columnELECT1 = New Global.System.Data.DataColumn("ELECT1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELECT1)
            Me.columnELECT2 = New Global.System.Data.DataColumn("ELECT2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELECT2)
            Me.columnPRODUCE_TECHNOLOGY_TH = New Global.System.Data.DataColumn("PRODUCE_TECHNOLOGY_TH", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCE_TECHNOLOGY_TH)
            Me.columnPRODUCE_TECHNOLOGY_EN = New Global.System.Data.DataColumn("PRODUCE_TECHNOLOGY_EN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCE_TECHNOLOGY_EN)
            Me.columnPRODUCE_TECHNOLOGY_DESC = New Global.System.Data.DataColumn("PRODUCE_TECHNOLOGY_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCE_TECHNOLOGY_DESC)
            Me.columnBUS_TYPE_RELATE = New Global.System.Data.DataColumn("BUS_TYPE_RELATE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_TYPE_RELATE)
            Me.columnBUS_TYPE_DEALER = New Global.System.Data.DataColumn("BUS_TYPE_DEALER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_TYPE_DEALER)
            Me.columnBUS_TYPE_IMPORTER = New Global.System.Data.DataColumn("BUS_TYPE_IMPORTER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_TYPE_IMPORTER)
            Me.columnBUS_TYPE_EXPORTER = New Global.System.Data.DataColumn("BUS_TYPE_EXPORTER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_TYPE_EXPORTER)
            Me.columnBUS_TYPE_OTHER = New Global.System.Data.DataColumn("BUS_TYPE_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_TYPE_OTHER)
            Me.columnREMAINDER = New Global.System.Data.DataColumn("REMAINDER", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREMAINDER)
            Me.columnADDR_SOI.Caption = "DataColumn3"
            Me.columnADDR_ROAD.Caption = "DataColumn4"
            Me.columnADDR_SUB_DISTRICT.Caption = "DataColumn5"
            Me.columnADDR_DISTRICT.Caption = "DataColumn6"
            Me.columnADDR_PROVINCE_NAME.Caption = "DataColumn3"
            Me.columnADDR_POSTCODE.Caption = "DataColumn4"
            Me.columnADDR_TELEPHONE.Caption = "DataColumn5"
            Me.columnADDR_FAX.Caption = "DataColumn6"
            Me.columnADDR_EMAIL.Caption = "DataColumn3"
            Me.columnADDR_WEBSITE.Caption = "DataColumn4"
            Me.columnMEMBER_GROUP_NAME.Caption = "DataColumn5"
            Me.columnCONTACT1_TH.Caption = "DataColumn6"
            Me.columnCONTACT1_EN.Caption = "DataColumn5"
            Me.columnCONTACT2_TH.Caption = "DataColumn6"
            Me.columnCONTACT2_EN.Caption = "DataColumn6"
            Me.columnCONTACT3_TH.Caption = "DataColumn5"
            Me.columnCONTACT3_EN.Caption = "DataColumn6"
            Me.columnREGIST_CAPITAL.Caption = "DataColumn6"
            Me.columnEMPLOYEE_AMOUNT.Caption = "DataColumn5"
            Me.columnASSET1.Caption = "DataColumn6"
            Me.columnASSET2.Caption = "DataColumn6"
            Me.columnASSET3.Caption = "DataColumn5"
            Me.columnASSET4.Caption = "DataColumn6"
            Me.columnELECT1.Caption = "DataColumn6"
            Me.columnELECT2.Caption = "DataColumn6"
            Me.columnPRODUCE_TECHNOLOGY_TH.Caption = "DataColumn6"
            Me.columnPRODUCE_TECHNOLOGY_EN.Caption = "DataColumn6"
            Me.columnPRODUCE_TECHNOLOGY_DESC.Caption = "DataColumn6"
            Me.columnBUS_TYPE_RELATE.Caption = "DataColumn6"
            Me.columnBUS_TYPE_DEALER.Caption = "DataColumn6"
            Me.columnBUS_TYPE_IMPORTER.Caption = "DataColumn6"
            Me.columnBUS_TYPE_EXPORTER.Caption = "DataColumn6"
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFTImemberConfirmRow() As FTImemberConfirmRow
            Return CType(Me.NewRow, FTImemberConfirmRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTImemberConfirmRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTImemberConfirmRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTImemberConfirmRowChangedEvent) Is Nothing) Then
                RaiseEvent FTImemberConfirmRowChanged(Me, New FTImemberConfirmRowChangeEvent(CType(e.Row, FTImemberConfirmRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTImemberConfirmRowChangingEvent) Is Nothing) Then
                RaiseEvent FTImemberConfirmRowChanging(Me, New FTImemberConfirmRowChangeEvent(CType(e.Row, FTImemberConfirmRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTImemberConfirmRowDeletedEvent) Is Nothing) Then
                RaiseEvent FTImemberConfirmRowDeleted(Me, New FTImemberConfirmRowChangeEvent(CType(e.Row, FTImemberConfirmRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTImemberConfirmRowDeletingEvent) Is Nothing) Then
                RaiseEvent FTImemberConfirmRowDeleting(Me, New FTImemberConfirmRowChangeEvent(CType(e.Row, FTImemberConfirmRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFTImemberConfirmRow(ByVal row As FTImemberConfirmRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReports = New dsReports()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTImemberConfirmDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FTImemberApproval1DataTable
        Inherits Global.System.Data.TypedTableBase(Of FTImemberApproval1Row)

        Private columnMEMBER_MAIN_GROUP_CODE As Global.System.Data.DataColumn

        Private columnMEMBER_GROUP_CODE As Global.System.Data.DataColumn

        Private columnMEMBER_MAIN_TYPE_CODE As Global.System.Data.DataColumn

        Private columnMEMBER_TYPE_CODE As Global.System.Data.DataColumn

        Private columnMEMBER_TYPE_NAME As Global.System.Data.DataColumn

        Private columnMEMBER_SHORT_NAME As Global.System.Data.DataColumn

        Private columnMEMBER_SHORT_NAME_EN As Global.System.Data.DataColumn

        Private columnMEMBER_TYPE_NAME_EN As Global.System.Data.DataColumn

        Private columnBEGINS As Global.System.Data.DataColumn

        Private columnREGIST As Global.System.Data.DataColumn

        Private columnMOVE_TO As Global.System.Data.DataColumn

        Private columnHOLD As Global.System.Data.DataColumn

        Private columnRESIGN As Global.System.Data.DataColumn

        Private columnBLACK_LIST As Global.System.Data.DataColumn

        Private columnMOVE_FROM As Global.System.Data.DataColumn

        Private columnGROUPS As Global.System.Data.DataColumn

        Private columnPROVINCES As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FTImemberApproval1"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_MAIN_GROUP_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_MAIN_GROUP_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_GROUP_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_GROUP_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_MAIN_TYPE_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_MAIN_TYPE_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_TYPE_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_TYPE_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_TYPE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_TYPE_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_SHORT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_SHORT_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_SHORT_NAME_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_SHORT_NAME_EN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_TYPE_NAME_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_TYPE_NAME_EN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BEGINSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEGINS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREGIST
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOVE_TOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVE_TO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HOLDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOLD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RESIGNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESIGN
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BLACK_LISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBLACK_LIST
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOVE_FROMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOVE_FROM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GROUPSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGROUPS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PROVINCESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROVINCES
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FTImemberApproval1Row
            Get
                Return CType(Me.Rows(index), FTImemberApproval1Row)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberApproval1RowChanging As FTImemberApproval1RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberApproval1RowChanged As FTImemberApproval1RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberApproval1RowDeleting As FTImemberApproval1RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberApproval1RowDeleted As FTImemberApproval1RowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFTImemberApproval1Row(ByVal row As FTImemberApproval1Row)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFTImemberApproval1Row( _
                    ByVal MEMBER_MAIN_GROUP_CODE As String, _
                    ByVal MEMBER_GROUP_CODE As String, _
                    ByVal MEMBER_MAIN_TYPE_CODE As String, _
                    ByVal MEMBER_TYPE_CODE As String, _
                    ByVal MEMBER_TYPE_NAME As String, _
                    ByVal MEMBER_SHORT_NAME As String, _
                    ByVal MEMBER_SHORT_NAME_EN As String, _
                    ByVal MEMBER_TYPE_NAME_EN As String, _
                    ByVal BEGINS As String, _
                    ByVal REGIST As String, _
                    ByVal MOVE_TO As String, _
                    ByVal HOLD As String, _
                    ByVal RESIGN As String, _
                    ByVal BLACK_LIST As String, _
                    ByVal MOVE_FROM As String, _
                    ByVal GROUPS As String, _
                    ByVal PROVINCES As String) As FTImemberApproval1Row
            Dim rowFTImemberApproval1Row As FTImemberApproval1Row = CType(Me.NewRow, FTImemberApproval1Row)
            Dim columnValuesArray() As Object = New Object() {MEMBER_MAIN_GROUP_CODE, MEMBER_GROUP_CODE, MEMBER_MAIN_TYPE_CODE, MEMBER_TYPE_CODE, MEMBER_TYPE_NAME, MEMBER_SHORT_NAME, MEMBER_SHORT_NAME_EN, MEMBER_TYPE_NAME_EN, BEGINS, REGIST, MOVE_TO, HOLD, RESIGN, BLACK_LIST, MOVE_FROM, GROUPS, PROVINCES}
            rowFTImemberApproval1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTImemberApproval1Row)
            Return rowFTImemberApproval1Row
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTImemberApproval1DataTable = CType(MyBase.Clone, FTImemberApproval1DataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTImemberApproval1DataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnMEMBER_MAIN_GROUP_CODE = MyBase.Columns("MEMBER_MAIN_GROUP_CODE")
            Me.columnMEMBER_GROUP_CODE = MyBase.Columns("MEMBER_GROUP_CODE")
            Me.columnMEMBER_MAIN_TYPE_CODE = MyBase.Columns("MEMBER_MAIN_TYPE_CODE")
            Me.columnMEMBER_TYPE_CODE = MyBase.Columns("MEMBER_TYPE_CODE")
            Me.columnMEMBER_TYPE_NAME = MyBase.Columns("MEMBER_TYPE_NAME")
            Me.columnMEMBER_SHORT_NAME = MyBase.Columns("MEMBER_SHORT_NAME")
            Me.columnMEMBER_SHORT_NAME_EN = MyBase.Columns("MEMBER_SHORT_NAME_EN")
            Me.columnMEMBER_TYPE_NAME_EN = MyBase.Columns("MEMBER_TYPE_NAME_EN")
            Me.columnBEGINS = MyBase.Columns("BEGINS")
            Me.columnREGIST = MyBase.Columns("REGIST")
            Me.columnMOVE_TO = MyBase.Columns("MOVE_TO")
            Me.columnHOLD = MyBase.Columns("HOLD")
            Me.columnRESIGN = MyBase.Columns("RESIGN")
            Me.columnBLACK_LIST = MyBase.Columns("BLACK_LIST")
            Me.columnMOVE_FROM = MyBase.Columns("MOVE_FROM")
            Me.columnGROUPS = MyBase.Columns("GROUPS")
            Me.columnPROVINCES = MyBase.Columns("PROVINCES")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnMEMBER_MAIN_GROUP_CODE = New Global.System.Data.DataColumn("MEMBER_MAIN_GROUP_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_MAIN_GROUP_CODE)
            Me.columnMEMBER_GROUP_CODE = New Global.System.Data.DataColumn("MEMBER_GROUP_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_GROUP_CODE)
            Me.columnMEMBER_MAIN_TYPE_CODE = New Global.System.Data.DataColumn("MEMBER_MAIN_TYPE_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_MAIN_TYPE_CODE)
            Me.columnMEMBER_TYPE_CODE = New Global.System.Data.DataColumn("MEMBER_TYPE_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_TYPE_CODE)
            Me.columnMEMBER_TYPE_NAME = New Global.System.Data.DataColumn("MEMBER_TYPE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_TYPE_NAME)
            Me.columnMEMBER_SHORT_NAME = New Global.System.Data.DataColumn("MEMBER_SHORT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_SHORT_NAME)
            Me.columnMEMBER_SHORT_NAME_EN = New Global.System.Data.DataColumn("MEMBER_SHORT_NAME_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_SHORT_NAME_EN)
            Me.columnMEMBER_TYPE_NAME_EN = New Global.System.Data.DataColumn("MEMBER_TYPE_NAME_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_TYPE_NAME_EN)
            Me.columnBEGINS = New Global.System.Data.DataColumn("BEGINS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEGINS)
            Me.columnREGIST = New Global.System.Data.DataColumn("REGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREGIST)
            Me.columnMOVE_TO = New Global.System.Data.DataColumn("MOVE_TO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVE_TO)
            Me.columnHOLD = New Global.System.Data.DataColumn("HOLD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOLD)
            Me.columnRESIGN = New Global.System.Data.DataColumn("RESIGN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESIGN)
            Me.columnBLACK_LIST = New Global.System.Data.DataColumn("BLACK_LIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBLACK_LIST)
            Me.columnMOVE_FROM = New Global.System.Data.DataColumn("MOVE_FROM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOVE_FROM)
            Me.columnGROUPS = New Global.System.Data.DataColumn("GROUPS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUPS)
            Me.columnPROVINCES = New Global.System.Data.DataColumn("PROVINCES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROVINCES)
            Me.columnMEMBER_TYPE_NAME.Caption = "DataColumn1"
            Me.columnMEMBER_SHORT_NAME.Caption = "DataColumn2"
            Me.columnMEMBER_SHORT_NAME_EN.Caption = "DataColumn3"
            Me.columnMEMBER_TYPE_NAME_EN.Caption = "DataColumn4"
            Me.columnBEGINS.Caption = "DataColumn5"
            Me.columnREGIST.Caption = "DataColumn1"
            Me.columnMOVE_TO.Caption = "DataColumn2"
            Me.columnHOLD.Caption = "DataColumn3"
            Me.columnRESIGN.Caption = "DataColumn4"
            Me.columnBLACK_LIST.Caption = "DataColumn5"
            Me.columnMOVE_FROM.Caption = "DataColumn1"
            Me.columnGROUPS.Caption = "DataColumn2"
            Me.columnPROVINCES.Caption = "DataColumn3"
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFTImemberApproval1Row() As FTImemberApproval1Row
            Return CType(Me.NewRow, FTImemberApproval1Row)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTImemberApproval1Row(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTImemberApproval1Row)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTImemberApproval1RowChangedEvent) Is Nothing) Then
                RaiseEvent FTImemberApproval1RowChanged(Me, New FTImemberApproval1RowChangeEvent(CType(e.Row, FTImemberApproval1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTImemberApproval1RowChangingEvent) Is Nothing) Then
                RaiseEvent FTImemberApproval1RowChanging(Me, New FTImemberApproval1RowChangeEvent(CType(e.Row, FTImemberApproval1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTImemberApproval1RowDeletedEvent) Is Nothing) Then
                RaiseEvent FTImemberApproval1RowDeleted(Me, New FTImemberApproval1RowChangeEvent(CType(e.Row, FTImemberApproval1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTImemberApproval1RowDeletingEvent) Is Nothing) Then
                RaiseEvent FTImemberApproval1RowDeleting(Me, New FTImemberApproval1RowChangeEvent(CType(e.Row, FTImemberApproval1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFTImemberApproval1Row(ByVal row As FTImemberApproval1Row)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReports = New dsReports()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTImemberApproval1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FTImemberApproval2DataTable
        Inherits Global.System.Data.TypedTableBase(Of FTImemberApproval2Row)

        Private columnYEARS As Global.System.Data.DataColumn

        Private columnMONTH As Global.System.Data.DataColumn

        Private columnMONTH_NAME_THA As Global.System.Data.DataColumn

        Private columnDataColumn1 As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FTImemberApproval2"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property YEARSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYEARS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MONTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MONTH_NAME_THAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTH_NAME_THA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DataColumn1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataColumn1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FTImemberApproval2Row
            Get
                Return CType(Me.Rows(index), FTImemberApproval2Row)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberApproval2RowChanging As FTImemberApproval2RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberApproval2RowChanged As FTImemberApproval2RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberApproval2RowDeleting As FTImemberApproval2RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberApproval2RowDeleted As FTImemberApproval2RowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFTImemberApproval2Row(ByVal row As FTImemberApproval2Row)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFTImemberApproval2Row(ByVal YEARS As String, ByVal MONTH As String, ByVal MONTH_NAME_THA As String, ByVal DataColumn1 As String) As FTImemberApproval2Row
            Dim rowFTImemberApproval2Row As FTImemberApproval2Row = CType(Me.NewRow, FTImemberApproval2Row)
            Dim columnValuesArray() As Object = New Object() {YEARS, MONTH, MONTH_NAME_THA, DataColumn1}
            rowFTImemberApproval2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTImemberApproval2Row)
            Return rowFTImemberApproval2Row
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTImemberApproval2DataTable = CType(MyBase.Clone, FTImemberApproval2DataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTImemberApproval2DataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnYEARS = MyBase.Columns("YEARS")
            Me.columnMONTH = MyBase.Columns("MONTH")
            Me.columnMONTH_NAME_THA = MyBase.Columns("MONTH_NAME_THA")
            Me.columnDataColumn1 = MyBase.Columns("DataColumn1")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnYEARS = New Global.System.Data.DataColumn("YEARS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYEARS)
            Me.columnMONTH = New Global.System.Data.DataColumn("MONTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTH)
            Me.columnMONTH_NAME_THA = New Global.System.Data.DataColumn("MONTH_NAME_THA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTH_NAME_THA)
            Me.columnDataColumn1 = New Global.System.Data.DataColumn("DataColumn1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataColumn1)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFTImemberApproval2Row() As FTImemberApproval2Row
            Return CType(Me.NewRow, FTImemberApproval2Row)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTImemberApproval2Row(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTImemberApproval2Row)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTImemberApproval2RowChangedEvent) Is Nothing) Then
                RaiseEvent FTImemberApproval2RowChanged(Me, New FTImemberApproval2RowChangeEvent(CType(e.Row, FTImemberApproval2Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTImemberApproval2RowChangingEvent) Is Nothing) Then
                RaiseEvent FTImemberApproval2RowChanging(Me, New FTImemberApproval2RowChangeEvent(CType(e.Row, FTImemberApproval2Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTImemberApproval2RowDeletedEvent) Is Nothing) Then
                RaiseEvent FTImemberApproval2RowDeleted(Me, New FTImemberApproval2RowChangeEvent(CType(e.Row, FTImemberApproval2Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTImemberApproval2RowDeletingEvent) Is Nothing) Then
                RaiseEvent FTImemberApproval2RowDeleting(Me, New FTImemberApproval2RowChangeEvent(CType(e.Row, FTImemberApproval2Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFTImemberApproval2Row(ByVal row As FTImemberApproval2Row)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReports = New dsReports()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTImemberApproval2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FTImemberChangedDataTable
        Inherits Global.System.Data.TypedTableBase(Of FTImemberChangedRow)

        Private columnDAY_FOR As Global.System.Data.DataColumn

        Private columnMOD_ADDRESS As Global.System.Data.DataColumn

        Private columnMOD_NAME As Global.System.Data.DataColumn

        Private columnMOD_REPRESENT As Global.System.Data.DataColumn

        Private columnMOD_REGIST As Global.System.Data.DataColumn

        Private columnMOD_RETIRE As Global.System.Data.DataColumn

        Private columnMOD_BLACKLIST As Global.System.Data.DataColumn

        Private columnMOD_OTHER As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FTImemberChanged"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DAY_FORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAY_FOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOD_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOD_ADDRESS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOD_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOD_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOD_REPRESENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOD_REPRESENT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOD_REGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOD_REGIST
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOD_RETIREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOD_RETIRE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOD_BLACKLISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOD_BLACKLIST
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MOD_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOD_OTHER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FTImemberChangedRow
            Get
                Return CType(Me.Rows(index), FTImemberChangedRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberChangedRowChanging As FTImemberChangedRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberChangedRowChanged As FTImemberChangedRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberChangedRowDeleting As FTImemberChangedRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTImemberChangedRowDeleted As FTImemberChangedRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFTImemberChangedRow(ByVal row As FTImemberChangedRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFTImemberChangedRow(ByVal DAY_FOR As Date, ByVal MOD_ADDRESS As String, ByVal MOD_NAME As String, ByVal MOD_REPRESENT As String, ByVal MOD_REGIST As String, ByVal MOD_RETIRE As String, ByVal MOD_BLACKLIST As String, ByVal MOD_OTHER As String) As FTImemberChangedRow
            Dim rowFTImemberChangedRow As FTImemberChangedRow = CType(Me.NewRow, FTImemberChangedRow)
            Dim columnValuesArray() As Object = New Object() {DAY_FOR, MOD_ADDRESS, MOD_NAME, MOD_REPRESENT, MOD_REGIST, MOD_RETIRE, MOD_BLACKLIST, MOD_OTHER}
            rowFTImemberChangedRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTImemberChangedRow)
            Return rowFTImemberChangedRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTImemberChangedDataTable = CType(MyBase.Clone, FTImemberChangedDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTImemberChangedDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnDAY_FOR = MyBase.Columns("DAY_FOR")
            Me.columnMOD_ADDRESS = MyBase.Columns("MOD_ADDRESS")
            Me.columnMOD_NAME = MyBase.Columns("MOD_NAME")
            Me.columnMOD_REPRESENT = MyBase.Columns("MOD_REPRESENT")
            Me.columnMOD_REGIST = MyBase.Columns("MOD_REGIST")
            Me.columnMOD_RETIRE = MyBase.Columns("MOD_RETIRE")
            Me.columnMOD_BLACKLIST = MyBase.Columns("MOD_BLACKLIST")
            Me.columnMOD_OTHER = MyBase.Columns("MOD_OTHER")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnDAY_FOR = New Global.System.Data.DataColumn("DAY_FOR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAY_FOR)
            Me.columnMOD_ADDRESS = New Global.System.Data.DataColumn("MOD_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOD_ADDRESS)
            Me.columnMOD_NAME = New Global.System.Data.DataColumn("MOD_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOD_NAME)
            Me.columnMOD_REPRESENT = New Global.System.Data.DataColumn("MOD_REPRESENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOD_REPRESENT)
            Me.columnMOD_REGIST = New Global.System.Data.DataColumn("MOD_REGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOD_REGIST)
            Me.columnMOD_RETIRE = New Global.System.Data.DataColumn("MOD_RETIRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOD_RETIRE)
            Me.columnMOD_BLACKLIST = New Global.System.Data.DataColumn("MOD_BLACKLIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOD_BLACKLIST)
            Me.columnMOD_OTHER = New Global.System.Data.DataColumn("MOD_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOD_OTHER)
            Me.columnMOD_ADDRESS.Caption = "DataColumn1"
            Me.columnMOD_NAME.Caption = "DataColumn2"
            Me.columnMOD_REPRESENT.Caption = "DataColumn1"
            Me.columnMOD_REGIST.Caption = "DataColumn2"
            Me.columnMOD_RETIRE.Caption = "DataColumn1"
            Me.columnMOD_BLACKLIST.Caption = "DataColumn2"
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFTImemberChangedRow() As FTImemberChangedRow
            Return CType(Me.NewRow, FTImemberChangedRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTImemberChangedRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTImemberChangedRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTImemberChangedRowChangedEvent) Is Nothing) Then
                RaiseEvent FTImemberChangedRowChanged(Me, New FTImemberChangedRowChangeEvent(CType(e.Row, FTImemberChangedRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTImemberChangedRowChangingEvent) Is Nothing) Then
                RaiseEvent FTImemberChangedRowChanging(Me, New FTImemberChangedRowChangeEvent(CType(e.Row, FTImemberChangedRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTImemberChangedRowDeletedEvent) Is Nothing) Then
                RaiseEvent FTImemberChangedRowDeleted(Me, New FTImemberChangedRowChangeEvent(CType(e.Row, FTImemberChangedRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTImemberChangedRowDeletingEvent) Is Nothing) Then
                RaiseEvent FTImemberChangedRowDeleting(Me, New FTImemberChangedRowChangeEvent(CType(e.Row, FTImemberChangedRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFTImemberChangedRow(ByVal row As FTImemberChangedRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReports = New dsReports()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTImemberChangedDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FTIrepresentInfoDataTable
        Inherits Global.System.Data.TypedTableBase(Of FTIrepresentInfoRow)

        Private columnREPRESENT_SEQ As Global.System.Data.DataColumn

        Private columnPOSITION_NAME_TH As Global.System.Data.DataColumn

        Private columnCOMP_PERSON_NAME_TH As Global.System.Data.DataColumn

        Private columnMEMBER_CODE As Global.System.Data.DataColumn

        Private columnPRENAME_TH As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FTIrepresentInfo"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property REPRESENT_SEQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPRESENT_SEQ
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property POSITION_NAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSITION_NAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMP_PERSON_NAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMP_PERSON_NAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRENAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRENAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FTIrepresentInfoRow
            Get
                Return CType(Me.Rows(index), FTIrepresentInfoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIrepresentInfoRowChanging As FTIrepresentInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIrepresentInfoRowChanged As FTIrepresentInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIrepresentInfoRowDeleting As FTIrepresentInfoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIrepresentInfoRowDeleted As FTIrepresentInfoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFTIrepresentInfoRow(ByVal row As FTIrepresentInfoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFTIrepresentInfoRow(ByVal REPRESENT_SEQ As Integer, ByVal POSITION_NAME_TH As String, ByVal COMP_PERSON_NAME_TH As String, ByVal MEMBER_CODE As String, ByVal PRENAME_TH As String) As FTIrepresentInfoRow
            Dim rowFTIrepresentInfoRow As FTIrepresentInfoRow = CType(Me.NewRow, FTIrepresentInfoRow)
            Dim columnValuesArray() As Object = New Object() {REPRESENT_SEQ, POSITION_NAME_TH, COMP_PERSON_NAME_TH, MEMBER_CODE, PRENAME_TH}
            rowFTIrepresentInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTIrepresentInfoRow)
            Return rowFTIrepresentInfoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTIrepresentInfoDataTable = CType(MyBase.Clone, FTIrepresentInfoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTIrepresentInfoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnREPRESENT_SEQ = MyBase.Columns("REPRESENT_SEQ")
            Me.columnPOSITION_NAME_TH = MyBase.Columns("POSITION_NAME_TH")
            Me.columnCOMP_PERSON_NAME_TH = MyBase.Columns("COMP_PERSON_NAME_TH")
            Me.columnMEMBER_CODE = MyBase.Columns("MEMBER_CODE")
            Me.columnPRENAME_TH = MyBase.Columns("PRENAME_TH")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnREPRESENT_SEQ = New Global.System.Data.DataColumn("REPRESENT_SEQ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPRESENT_SEQ)
            Me.columnPOSITION_NAME_TH = New Global.System.Data.DataColumn("POSITION_NAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSITION_NAME_TH)
            Me.columnCOMP_PERSON_NAME_TH = New Global.System.Data.DataColumn("COMP_PERSON_NAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMP_PERSON_NAME_TH)
            Me.columnMEMBER_CODE = New Global.System.Data.DataColumn("MEMBER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_CODE)
            Me.columnPRENAME_TH = New Global.System.Data.DataColumn("PRENAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRENAME_TH)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFTIrepresentInfoRow() As FTIrepresentInfoRow
            Return CType(Me.NewRow, FTIrepresentInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTIrepresentInfoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTIrepresentInfoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTIrepresentInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent FTIrepresentInfoRowChanged(Me, New FTIrepresentInfoRowChangeEvent(CType(e.Row, FTIrepresentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTIrepresentInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent FTIrepresentInfoRowChanging(Me, New FTIrepresentInfoRowChangeEvent(CType(e.Row, FTIrepresentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTIrepresentInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent FTIrepresentInfoRowDeleted(Me, New FTIrepresentInfoRowChangeEvent(CType(e.Row, FTIrepresentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTIrepresentInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent FTIrepresentInfoRowDeleting(Me, New FTIrepresentInfoRowChangeEvent(CType(e.Row, FTIrepresentInfoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFTIrepresentInfoRow(ByVal row As FTIrepresentInfoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReports = New dsReports()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTIrepresentInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class FTIconsiderationReport1DataTable
        Inherits Global.System.Data.TypedTableBase(Of FTIconsiderationReport1Row)

        Private columnMEMBER_CODE As Global.System.Data.DataColumn

        Private columnPRENAME_TH As Global.System.Data.DataColumn

        Private columnCOMP_PERSON_NAME_TH As Global.System.Data.DataColumn

        Private columnPRENAME_FORMAT_TH As Global.System.Data.DataColumn

        Private columnADVISOR_CODE As Global.System.Data.DataColumn

        Private columnMEMBER_GROUP_NAME As Global.System.Data.DataColumn

        Private columnADVISOR_VALUE As Global.System.Data.DataColumn

        Private columnMEMBER_DATE As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "FTIconsiderationReport1"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRENAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRENAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property COMP_PERSON_NAME_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMP_PERSON_NAME_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PRENAME_FORMAT_THColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRENAME_FORMAT_TH
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADVISOR_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADVISOR_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_GROUP_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_GROUP_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ADVISOR_VALUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADVISOR_VALUE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MEMBER_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBER_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As FTIconsiderationReport1Row
            Get
                Return CType(Me.Rows(index), FTIconsiderationReport1Row)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIconsiderationReport1RowChanging As FTIconsiderationReport1RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIconsiderationReport1RowChanged As FTIconsiderationReport1RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIconsiderationReport1RowDeleting As FTIconsiderationReport1RowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event FTIconsiderationReport1RowDeleted As FTIconsiderationReport1RowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddFTIconsiderationReport1Row(ByVal row As FTIconsiderationReport1Row)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddFTIconsiderationReport1Row(ByVal MEMBER_CODE As String, ByVal PRENAME_TH As String, ByVal COMP_PERSON_NAME_TH As String, ByVal PRENAME_FORMAT_TH As String, ByVal ADVISOR_CODE As String, ByVal MEMBER_GROUP_NAME As String, ByVal ADVISOR_VALUE As Double, ByVal MEMBER_DATE As Date) As FTIconsiderationReport1Row
            Dim rowFTIconsiderationReport1Row As FTIconsiderationReport1Row = CType(Me.NewRow, FTIconsiderationReport1Row)
            Dim columnValuesArray() As Object = New Object() {MEMBER_CODE, PRENAME_TH, COMP_PERSON_NAME_TH, PRENAME_FORMAT_TH, ADVISOR_CODE, MEMBER_GROUP_NAME, ADVISOR_VALUE, MEMBER_DATE}
            rowFTIconsiderationReport1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowFTIconsiderationReport1Row)
            Return rowFTIconsiderationReport1Row
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FTIconsiderationReport1DataTable = CType(MyBase.Clone, FTIconsiderationReport1DataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FTIconsiderationReport1DataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnMEMBER_CODE = MyBase.Columns("MEMBER_CODE")
            Me.columnPRENAME_TH = MyBase.Columns("PRENAME_TH")
            Me.columnCOMP_PERSON_NAME_TH = MyBase.Columns("COMP_PERSON_NAME_TH")
            Me.columnPRENAME_FORMAT_TH = MyBase.Columns("PRENAME_FORMAT_TH")
            Me.columnADVISOR_CODE = MyBase.Columns("ADVISOR_CODE")
            Me.columnMEMBER_GROUP_NAME = MyBase.Columns("MEMBER_GROUP_NAME")
            Me.columnADVISOR_VALUE = MyBase.Columns("ADVISOR_VALUE")
            Me.columnMEMBER_DATE = MyBase.Columns("MEMBER_DATE")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnMEMBER_CODE = New Global.System.Data.DataColumn("MEMBER_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_CODE)
            Me.columnPRENAME_TH = New Global.System.Data.DataColumn("PRENAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRENAME_TH)
            Me.columnCOMP_PERSON_NAME_TH = New Global.System.Data.DataColumn("COMP_PERSON_NAME_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMP_PERSON_NAME_TH)
            Me.columnPRENAME_FORMAT_TH = New Global.System.Data.DataColumn("PRENAME_FORMAT_TH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRENAME_FORMAT_TH)
            Me.columnADVISOR_CODE = New Global.System.Data.DataColumn("ADVISOR_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADVISOR_CODE)
            Me.columnMEMBER_GROUP_NAME = New Global.System.Data.DataColumn("MEMBER_GROUP_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_GROUP_NAME)
            Me.columnADVISOR_VALUE = New Global.System.Data.DataColumn("ADVISOR_VALUE", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADVISOR_VALUE)
            Me.columnMEMBER_DATE = New Global.System.Data.DataColumn("MEMBER_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBER_DATE)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewFTIconsiderationReport1Row() As FTIconsiderationReport1Row
            Return CType(Me.NewRow, FTIconsiderationReport1Row)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FTIconsiderationReport1Row(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FTIconsiderationReport1Row)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FTIconsiderationReport1RowChangedEvent) Is Nothing) Then
                RaiseEvent FTIconsiderationReport1RowChanged(Me, New FTIconsiderationReport1RowChangeEvent(CType(e.Row, FTIconsiderationReport1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FTIconsiderationReport1RowChangingEvent) Is Nothing) Then
                RaiseEvent FTIconsiderationReport1RowChanging(Me, New FTIconsiderationReport1RowChangeEvent(CType(e.Row, FTIconsiderationReport1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FTIconsiderationReport1RowDeletedEvent) Is Nothing) Then
                RaiseEvent FTIconsiderationReport1RowDeleted(Me, New FTIconsiderationReport1RowChangeEvent(CType(e.Row, FTIconsiderationReport1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FTIconsiderationReport1RowDeletingEvent) Is Nothing) Then
                RaiseEvent FTIconsiderationReport1RowDeleting(Me, New FTIconsiderationReport1RowChangeEvent(CType(e.Row, FTIconsiderationReport1Row), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveFTIconsiderationReport1Row(ByVal row As FTIconsiderationReport1Row)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsReports = New dsReports()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FTIconsiderationReport1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTInewApplyRow
        Inherits Global.System.Data.DataRow

        Private tableFTInewApply As FTInewApplyDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTInewApply = CType(Me.Table, FTInewApplyDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REGIST_CODE() As String
            Get
                Return CType(Me(Me.tableFTInewApply.REGIST_CODEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableFTInewApply.REGIST_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMP_PERSON_NAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewApply.COMP_PERSON_NAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMP_PERSON_NAME_TH' in table 'FTInewApply' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewApply.COMP_PERSON_NAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMP_PERSON_NAME_EN() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewApply.COMP_PERSON_NAME_ENColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMP_PERSON_NAME_EN' in table 'FTInewApply' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewApply.COMP_PERSON_NAME_ENColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REGIST_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableFTInewApply.REGIST_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REGIST_DATE' in table 'FTInewApply' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableFTInewApply.REGIST_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewApply.MEMBER_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_CODE' in table 'FTInewApply' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewApply.MEMBER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMP_PERSON_NAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTInewApply.COMP_PERSON_NAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMP_PERSON_NAME_THNull()
            Me(Me.tableFTInewApply.COMP_PERSON_NAME_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMP_PERSON_NAME_ENNull() As Boolean
            Return Me.IsNull(Me.tableFTInewApply.COMP_PERSON_NAME_ENColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMP_PERSON_NAME_ENNull()
            Me(Me.tableFTInewApply.COMP_PERSON_NAME_ENColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREGIST_DATENull() As Boolean
            Return Me.IsNull(Me.tableFTInewApply.REGIST_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREGIST_DATENull()
            Me(Me.tableFTInewApply.REGIST_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTInewApply.MEMBER_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_CODENull()
            Me(Me.tableFTInewApply.MEMBER_CODEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTIconsideration1Row
        Inherits Global.System.Data.DataRow

        Private tableFTIconsideration1 As FTIconsideration1DataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTIconsideration1 = CType(Me.Table, FTIconsideration1DataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_MAIN_GROUP_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsideration1.MEMBER_MAIN_GROUP_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_MAIN_GROUP_CODE' in table 'FTIconsideration1' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsideration1.MEMBER_MAIN_GROUP_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_GROUP_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsideration1.MEMBER_GROUP_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_GROUP_CODE' in table 'FTIconsideration1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsideration1.MEMBER_GROUP_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_MAIN_TYPE_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsideration1.MEMBER_MAIN_TYPE_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_MAIN_TYPE_CODE' in table 'FTIconsideration1' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsideration1.MEMBER_MAIN_TYPE_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_TYPE_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsideration1.MEMBER_TYPE_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_TYPE_CODE' in table 'FTIconsideration1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsideration1.MEMBER_TYPE_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_GROUP_RDLC_GROUP() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsideration1.MEMBER_GROUP_RDLC_GROUPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_GROUP_RDLC_GROUP' in table 'FTIconsideration1' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsideration1.MEMBER_GROUP_RDLC_GROUPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QTY() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFTIconsideration1.QTYColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY' in table 'FTIconsideration1' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFTIconsideration1.QTYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QTY_VALUE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFTIconsideration1.QTY_VALUEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY_VALUE' in table 'FTIconsideration1' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFTIconsideration1.QTY_VALUEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_GROUP_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsideration1.MEMBER_GROUP_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_GROUP_NAME' in table 'FTIconsideration1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsideration1.MEMBER_GROUP_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_MAIN_GROUP_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsideration1.MEMBER_MAIN_GROUP_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_MAIN_GROUP_CODENull()
            Me(Me.tableFTIconsideration1.MEMBER_MAIN_GROUP_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_GROUP_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsideration1.MEMBER_GROUP_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_GROUP_CODENull()
            Me(Me.tableFTIconsideration1.MEMBER_GROUP_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_MAIN_TYPE_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsideration1.MEMBER_MAIN_TYPE_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_MAIN_TYPE_CODENull()
            Me(Me.tableFTIconsideration1.MEMBER_MAIN_TYPE_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_TYPE_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsideration1.MEMBER_TYPE_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_TYPE_CODENull()
            Me(Me.tableFTIconsideration1.MEMBER_TYPE_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_GROUP_RDLC_GROUPNull() As Boolean
            Return Me.IsNull(Me.tableFTIconsideration1.MEMBER_GROUP_RDLC_GROUPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_GROUP_RDLC_GROUPNull()
            Me(Me.tableFTIconsideration1.MEMBER_GROUP_RDLC_GROUPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQTYNull() As Boolean
            Return Me.IsNull(Me.tableFTIconsideration1.QTYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQTYNull()
            Me(Me.tableFTIconsideration1.QTYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQTY_VALUENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsideration1.QTY_VALUEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQTY_VALUENull()
            Me(Me.tableFTIconsideration1.QTY_VALUEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_GROUP_NAMENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsideration1.MEMBER_GROUP_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_GROUP_NAMENull()
            Me(Me.tableFTIconsideration1.MEMBER_GROUP_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTInewForApproveRow
        Inherits Global.System.Data.DataRow

        Private tableFTInewForApprove As FTInewForApproveDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTInewForApprove = CType(Me.Table, FTInewForApproveDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ROW_NO() As Integer
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.ROW_NOColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ROW_NO' in table 'FTInewForApprove' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableFTInewForApprove.ROW_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_CODE() As String
            Get
                Return CType(Me(Me.tableFTInewForApprove.MEMBER_CODEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableFTInewForApprove.MEMBER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMP_PERSON_NAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.COMP_PERSON_NAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMP_PERSON_NAME_TH' in table 'FTInewForApprove' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewForApprove.COMP_PERSON_NAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACT_NAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.CONTACT_NAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACT_NAME_TH' in table 'FTInewForApprove' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewForApprove.CONTACT_NAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MAIN_PRODUCTS_SERVICES() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.MAIN_PRODUCTS_SERVICESColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAIN_PRODUCTS_SERVICES' in table 'FTInewForApprove' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewForApprove.MAIN_PRODUCTS_SERVICESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_GROUP() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.MEMBER_GROUPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_GROUP' in table 'FTInewForApprove' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewForApprove.MEMBER_GROUPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_PROVINCE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.MEMBER_PROVINCEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_PROVINCE' in table 'FTInewForApprove' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewForApprove.MEMBER_PROVINCEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_PROVINCE_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.ADDR_PROVINCE_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_PROVINCE_NAME' in table 'FTInewForApprove' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewForApprove.ADDR_PROVINCE_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_TELEPHONE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.ADDR_TELEPHONEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_TELEPHONE' in table 'FTInewForApprove' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTInewForApprove.ADDR_TELEPHONEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FIRST_REGIST_RATE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.FIRST_REGIST_RATEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRST_REGIST_RATE' in table 'FTInewForApprove' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFTInewForApprove.FIRST_REGIST_RATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FIRST_YEAR_RATE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFTInewForApprove.FIRST_YEAR_RATEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRST_YEAR_RATE' in table 'FTInewForApprove' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFTInewForApprove.FIRST_YEAR_RATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsROW_NONull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.ROW_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetROW_NONull()
            Me(Me.tableFTInewForApprove.ROW_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMP_PERSON_NAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.COMP_PERSON_NAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMP_PERSON_NAME_THNull()
            Me(Me.tableFTInewForApprove.COMP_PERSON_NAME_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACT_NAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.CONTACT_NAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACT_NAME_THNull()
            Me(Me.tableFTInewForApprove.CONTACT_NAME_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMAIN_PRODUCTS_SERVICESNull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.MAIN_PRODUCTS_SERVICESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMAIN_PRODUCTS_SERVICESNull()
            Me(Me.tableFTInewForApprove.MAIN_PRODUCTS_SERVICESColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_GROUPNull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.MEMBER_GROUPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_GROUPNull()
            Me(Me.tableFTInewForApprove.MEMBER_GROUPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_PROVINCENull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.MEMBER_PROVINCEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_PROVINCENull()
            Me(Me.tableFTInewForApprove.MEMBER_PROVINCEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_PROVINCE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.ADDR_PROVINCE_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_PROVINCE_NAMENull()
            Me(Me.tableFTInewForApprove.ADDR_PROVINCE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_TELEPHONENull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.ADDR_TELEPHONEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_TELEPHONENull()
            Me(Me.tableFTInewForApprove.ADDR_TELEPHONEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFIRST_REGIST_RATENull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.FIRST_REGIST_RATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFIRST_REGIST_RATENull()
            Me(Me.tableFTInewForApprove.FIRST_REGIST_RATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFIRST_YEAR_RATENull() As Boolean
            Return Me.IsNull(Me.tableFTInewForApprove.FIRST_YEAR_RATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFIRST_YEAR_RATENull()
            Me(Me.tableFTInewForApprove.FIRST_YEAR_RATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTImemberConfirmRow
        Inherits Global.System.Data.DataRow

        Private tableFTImemberConfirm As FTImemberConfirmDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTImemberConfirm = CType(Me.Table, FTImemberConfirmDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.MEMBER_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_CODE' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.MEMBER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRENAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.PRENAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRENAME_TH' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.PRENAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMP_PERSON_NAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.COMP_PERSON_NAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMP_PERSON_NAME_TH' in table 'FTImemberConfirm' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.COMP_PERSON_NAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_NO' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_MOO() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_MOOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_MOO' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_MOOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_SOI() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_SOIColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_SOI' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_SOIColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_ROAD() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_ROADColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_ROAD' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_ROADColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_SUB_DISTRICT() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_SUB_DISTRICTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_SUB_DISTRICT' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_SUB_DISTRICTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_DISTRICT() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_DISTRICTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_DISTRICT' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_DISTRICTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_PROVINCE_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_PROVINCE_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_PROVINCE_NAME' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_PROVINCE_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_POSTCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_POSTCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_POSTCODE' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_POSTCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_TELEPHONE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_TELEPHONEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_TELEPHONE' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_TELEPHONEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_FAX() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_FAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_FAX' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_FAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_EMAIL' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADDR_WEBSITE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ADDR_WEBSITEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDR_WEBSITE' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.ADDR_WEBSITEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_GROUP_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.MEMBER_GROUP_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_GROUP_NAME' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.MEMBER_GROUP_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACT1_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.CONTACT1_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACT1_TH' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.CONTACT1_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACT1_EN() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.CONTACT1_ENColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACT1_EN' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.CONTACT1_ENColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACT2_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.CONTACT2_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACT2_TH' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.CONTACT2_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACT2_EN() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.CONTACT2_ENColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACT2_EN' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.CONTACT2_ENColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACT3_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.CONTACT3_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACT3_TH' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.CONTACT3_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONTACT3_EN() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.CONTACT3_ENColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACT3_EN' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.CONTACT3_ENColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REGIST_CAPITAL() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.REGIST_CAPITALColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REGIST_CAPITAL' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFTImemberConfirm.REGIST_CAPITALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EMPLOYEE_AMOUNT() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.EMPLOYEE_AMOUNTColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMPLOYEE_AMOUNT' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableFTImemberConfirm.EMPLOYEE_AMOUNTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ASSET1() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ASSET1Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSET1' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.ASSET1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ASSET2() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ASSET2Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSET2' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.ASSET2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ASSET3() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ASSET3Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSET3' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.ASSET3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ASSET4() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ASSET4Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSET4' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.ASSET4Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ELECT1() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ELECT1Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELECT1' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.ELECT1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ELECT2() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.ELECT2Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELECT2' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.ELECT2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRODUCE_TECHNOLOGY_TH() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_THColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCE_TECHNOLOGY_TH' in table 'FTImemberConfirm' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRODUCE_TECHNOLOGY_EN() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_ENColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCE_TECHNOLOGY_EN' in table 'FTImemberConfirm' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_ENColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRODUCE_TECHNOLOGY_DESC() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_DESCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCE_TECHNOLOGY_DESC' in table 'FTImemberConfirm' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_DESCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BUS_TYPE_RELATE() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.BUS_TYPE_RELATEColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_TYPE_RELATE' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.BUS_TYPE_RELATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BUS_TYPE_DEALER() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.BUS_TYPE_DEALERColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_TYPE_DEALER' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.BUS_TYPE_DEALERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BUS_TYPE_IMPORTER() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.BUS_TYPE_IMPORTERColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_TYPE_IMPORTER' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.BUS_TYPE_IMPORTERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BUS_TYPE_EXPORTER() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.BUS_TYPE_EXPORTERColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_TYPE_EXPORTER' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableFTImemberConfirm.BUS_TYPE_EXPORTERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BUS_TYPE_OTHER() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.BUS_TYPE_OTHERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_TYPE_OTHER' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberConfirm.BUS_TYPE_OTHERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REMAINDER() As Integer
            Get
                Try
                    Return CType(Me(Me.tableFTImemberConfirm.REMAINDERColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REMAINDER' in table 'FTImemberConfirm' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableFTImemberConfirm.REMAINDERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.MEMBER_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_CODENull()
            Me(Me.tableFTImemberConfirm.MEMBER_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRENAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.PRENAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRENAME_THNull()
            Me(Me.tableFTImemberConfirm.PRENAME_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMP_PERSON_NAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.COMP_PERSON_NAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMP_PERSON_NAME_THNull()
            Me(Me.tableFTImemberConfirm.COMP_PERSON_NAME_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_NONull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_NONull()
            Me(Me.tableFTImemberConfirm.ADDR_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_MOONull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_MOOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_MOONull()
            Me(Me.tableFTImemberConfirm.ADDR_MOOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_SOINull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_SOIColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_SOINull()
            Me(Me.tableFTImemberConfirm.ADDR_SOIColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_ROADNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_ROADColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_ROADNull()
            Me(Me.tableFTImemberConfirm.ADDR_ROADColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_SUB_DISTRICTNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_SUB_DISTRICTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_SUB_DISTRICTNull()
            Me(Me.tableFTImemberConfirm.ADDR_SUB_DISTRICTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_DISTRICTNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_DISTRICTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_DISTRICTNull()
            Me(Me.tableFTImemberConfirm.ADDR_DISTRICTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_PROVINCE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_PROVINCE_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_PROVINCE_NAMENull()
            Me(Me.tableFTImemberConfirm.ADDR_PROVINCE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_POSTCODENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_POSTCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_POSTCODENull()
            Me(Me.tableFTImemberConfirm.ADDR_POSTCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_TELEPHONENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_TELEPHONEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_TELEPHONENull()
            Me(Me.tableFTImemberConfirm.ADDR_TELEPHONEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_FAXNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_FAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_FAXNull()
            Me(Me.tableFTImemberConfirm.ADDR_FAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_EMAILNull()
            Me(Me.tableFTImemberConfirm.ADDR_EMAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADDR_WEBSITENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ADDR_WEBSITEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADDR_WEBSITENull()
            Me(Me.tableFTImemberConfirm.ADDR_WEBSITEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_GROUP_NAMENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.MEMBER_GROUP_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_GROUP_NAMENull()
            Me(Me.tableFTImemberConfirm.MEMBER_GROUP_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACT1_THNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.CONTACT1_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACT1_THNull()
            Me(Me.tableFTImemberConfirm.CONTACT1_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACT1_ENNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.CONTACT1_ENColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACT1_ENNull()
            Me(Me.tableFTImemberConfirm.CONTACT1_ENColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACT2_THNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.CONTACT2_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACT2_THNull()
            Me(Me.tableFTImemberConfirm.CONTACT2_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACT2_ENNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.CONTACT2_ENColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACT2_ENNull()
            Me(Me.tableFTImemberConfirm.CONTACT2_ENColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACT3_THNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.CONTACT3_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACT3_THNull()
            Me(Me.tableFTImemberConfirm.CONTACT3_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONTACT3_ENNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.CONTACT3_ENColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONTACT3_ENNull()
            Me(Me.tableFTImemberConfirm.CONTACT3_ENColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREGIST_CAPITALNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.REGIST_CAPITALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREGIST_CAPITALNull()
            Me(Me.tableFTImemberConfirm.REGIST_CAPITALColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEMPLOYEE_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.EMPLOYEE_AMOUNTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEMPLOYEE_AMOUNTNull()
            Me(Me.tableFTImemberConfirm.EMPLOYEE_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsASSET1Null() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ASSET1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetASSET1Null()
            Me(Me.tableFTImemberConfirm.ASSET1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsASSET2Null() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ASSET2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetASSET2Null()
            Me(Me.tableFTImemberConfirm.ASSET2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsASSET3Null() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ASSET3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetASSET3Null()
            Me(Me.tableFTImemberConfirm.ASSET3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsASSET4Null() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ASSET4Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetASSET4Null()
            Me(Me.tableFTImemberConfirm.ASSET4Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsELECT1Null() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ELECT1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetELECT1Null()
            Me(Me.tableFTImemberConfirm.ELECT1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsELECT2Null() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.ELECT2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetELECT2Null()
            Me(Me.tableFTImemberConfirm.ELECT2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRODUCE_TECHNOLOGY_THNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRODUCE_TECHNOLOGY_THNull()
            Me(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRODUCE_TECHNOLOGY_ENNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_ENColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRODUCE_TECHNOLOGY_ENNull()
            Me(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_ENColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRODUCE_TECHNOLOGY_DESCNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_DESCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRODUCE_TECHNOLOGY_DESCNull()
            Me(Me.tableFTImemberConfirm.PRODUCE_TECHNOLOGY_DESCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBUS_TYPE_RELATENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.BUS_TYPE_RELATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBUS_TYPE_RELATENull()
            Me(Me.tableFTImemberConfirm.BUS_TYPE_RELATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBUS_TYPE_DEALERNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.BUS_TYPE_DEALERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBUS_TYPE_DEALERNull()
            Me(Me.tableFTImemberConfirm.BUS_TYPE_DEALERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBUS_TYPE_IMPORTERNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.BUS_TYPE_IMPORTERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBUS_TYPE_IMPORTERNull()
            Me(Me.tableFTImemberConfirm.BUS_TYPE_IMPORTERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBUS_TYPE_EXPORTERNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.BUS_TYPE_EXPORTERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBUS_TYPE_EXPORTERNull()
            Me(Me.tableFTImemberConfirm.BUS_TYPE_EXPORTERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBUS_TYPE_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.BUS_TYPE_OTHERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBUS_TYPE_OTHERNull()
            Me(Me.tableFTImemberConfirm.BUS_TYPE_OTHERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREMAINDERNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberConfirm.REMAINDERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREMAINDERNull()
            Me(Me.tableFTImemberConfirm.REMAINDERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTImemberApproval1Row
        Inherits Global.System.Data.DataRow

        Private tableFTImemberApproval1 As FTImemberApproval1DataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTImemberApproval1 = CType(Me.Table, FTImemberApproval1DataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_MAIN_GROUP_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MEMBER_MAIN_GROUP_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_MAIN_GROUP_CODE' in table 'FTImemberApproval1' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MEMBER_MAIN_GROUP_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_GROUP_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MEMBER_GROUP_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_GROUP_CODE' in table 'FTImemberApproval1' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MEMBER_GROUP_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_MAIN_TYPE_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MEMBER_MAIN_TYPE_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_MAIN_TYPE_CODE' in table 'FTImemberApproval1' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MEMBER_MAIN_TYPE_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_TYPE_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MEMBER_TYPE_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_TYPE_CODE' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MEMBER_TYPE_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_TYPE_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MEMBER_TYPE_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_TYPE_NAME' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MEMBER_TYPE_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_SHORT_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MEMBER_SHORT_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_SHORT_NAME' in table 'FTImemberApproval1' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MEMBER_SHORT_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_SHORT_NAME_EN() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MEMBER_SHORT_NAME_ENColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_SHORT_NAME_EN' in table 'FTImemberApproval1' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MEMBER_SHORT_NAME_ENColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_TYPE_NAME_EN() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MEMBER_TYPE_NAME_ENColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_TYPE_NAME_EN' in table 'FTImemberApproval1' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MEMBER_TYPE_NAME_ENColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BEGINS() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.BEGINSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BEGINS' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.BEGINSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REGIST() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.REGISTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REGIST' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.REGISTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOVE_TO() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MOVE_TOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOVE_TO' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MOVE_TOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HOLD() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.HOLDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HOLD' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.HOLDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RESIGN() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.RESIGNColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RESIGN' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.RESIGNColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BLACK_LIST() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.BLACK_LISTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BLACK_LIST' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.BLACK_LISTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOVE_FROM() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.MOVE_FROMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOVE_FROM' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.MOVE_FROMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GROUPS() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.GROUPSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GROUPS' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.GROUPSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PROVINCES() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval1.PROVINCESColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROVINCES' in table 'FTImemberApproval1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval1.PROVINCESColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_MAIN_GROUP_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MEMBER_MAIN_GROUP_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_MAIN_GROUP_CODENull()
            Me(Me.tableFTImemberApproval1.MEMBER_MAIN_GROUP_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_GROUP_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MEMBER_GROUP_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_GROUP_CODENull()
            Me(Me.tableFTImemberApproval1.MEMBER_GROUP_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_MAIN_TYPE_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MEMBER_MAIN_TYPE_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_MAIN_TYPE_CODENull()
            Me(Me.tableFTImemberApproval1.MEMBER_MAIN_TYPE_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_TYPE_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MEMBER_TYPE_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_TYPE_CODENull()
            Me(Me.tableFTImemberApproval1.MEMBER_TYPE_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_TYPE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MEMBER_TYPE_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_TYPE_NAMENull()
            Me(Me.tableFTImemberApproval1.MEMBER_TYPE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_SHORT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MEMBER_SHORT_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_SHORT_NAMENull()
            Me(Me.tableFTImemberApproval1.MEMBER_SHORT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_SHORT_NAME_ENNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MEMBER_SHORT_NAME_ENColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_SHORT_NAME_ENNull()
            Me(Me.tableFTImemberApproval1.MEMBER_SHORT_NAME_ENColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_TYPE_NAME_ENNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MEMBER_TYPE_NAME_ENColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_TYPE_NAME_ENNull()
            Me(Me.tableFTImemberApproval1.MEMBER_TYPE_NAME_ENColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBEGINSNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.BEGINSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBEGINSNull()
            Me(Me.tableFTImemberApproval1.BEGINSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREGISTNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.REGISTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREGISTNull()
            Me(Me.tableFTImemberApproval1.REGISTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOVE_TONull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MOVE_TOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOVE_TONull()
            Me(Me.tableFTImemberApproval1.MOVE_TOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHOLDNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.HOLDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHOLDNull()
            Me(Me.tableFTImemberApproval1.HOLDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRESIGNNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.RESIGNColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRESIGNNull()
            Me(Me.tableFTImemberApproval1.RESIGNColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBLACK_LISTNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.BLACK_LISTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBLACK_LISTNull()
            Me(Me.tableFTImemberApproval1.BLACK_LISTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOVE_FROMNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.MOVE_FROMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOVE_FROMNull()
            Me(Me.tableFTImemberApproval1.MOVE_FROMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGROUPSNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.GROUPSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGROUPSNull()
            Me(Me.tableFTImemberApproval1.GROUPSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPROVINCESNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval1.PROVINCESColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPROVINCESNull()
            Me(Me.tableFTImemberApproval1.PROVINCESColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTImemberApproval2Row
        Inherits Global.System.Data.DataRow

        Private tableFTImemberApproval2 As FTImemberApproval2DataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTImemberApproval2 = CType(Me.Table, FTImemberApproval2DataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property YEARS() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval2.YEARSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YEARS' in table 'FTImemberApproval2' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval2.YEARSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MONTH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval2.MONTHColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MONTH' in table 'FTImemberApproval2' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval2.MONTHColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MONTH_NAME_THA() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval2.MONTH_NAME_THAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MONTH_NAME_THA' in table 'FTImemberApproval2' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval2.MONTH_NAME_THAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DataColumn1() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberApproval2.DataColumn1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataColumn1' in table 'FTImemberApproval2' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberApproval2.DataColumn1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsYEARSNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval2.YEARSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetYEARSNull()
            Me(Me.tableFTImemberApproval2.YEARSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMONTHNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval2.MONTHColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMONTHNull()
            Me(Me.tableFTImemberApproval2.MONTHColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMONTH_NAME_THANull() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval2.MONTH_NAME_THAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMONTH_NAME_THANull()
            Me(Me.tableFTImemberApproval2.MONTH_NAME_THAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDataColumn1Null() As Boolean
            Return Me.IsNull(Me.tableFTImemberApproval2.DataColumn1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDataColumn1Null()
            Me(Me.tableFTImemberApproval2.DataColumn1Column) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTImemberChangedRow
        Inherits Global.System.Data.DataRow

        Private tableFTImemberChanged As FTImemberChangedDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTImemberChanged = CType(Me.Table, FTImemberChangedDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DAY_FOR() As Date
            Get
                Try
                    Return CType(Me(Me.tableFTImemberChanged.DAY_FORColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DAY_FOR' in table 'FTImemberChanged' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableFTImemberChanged.DAY_FORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOD_ADDRESS() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberChanged.MOD_ADDRESSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOD_ADDRESS' in table 'FTImemberChanged' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberChanged.MOD_ADDRESSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOD_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberChanged.MOD_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOD_NAME' in table 'FTImemberChanged' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberChanged.MOD_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOD_REPRESENT() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberChanged.MOD_REPRESENTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOD_REPRESENT' in table 'FTImemberChanged' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberChanged.MOD_REPRESENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOD_REGIST() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberChanged.MOD_REGISTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOD_REGIST' in table 'FTImemberChanged' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberChanged.MOD_REGISTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOD_RETIRE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberChanged.MOD_RETIREColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOD_RETIRE' in table 'FTImemberChanged' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberChanged.MOD_RETIREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOD_BLACKLIST() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberChanged.MOD_BLACKLISTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOD_BLACKLIST' in table 'FTImemberChanged' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberChanged.MOD_BLACKLISTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MOD_OTHER() As String
            Get
                Try
                    Return CType(Me(Me.tableFTImemberChanged.MOD_OTHERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOD_OTHER' in table 'FTImemberChanged' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTImemberChanged.MOD_OTHERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDAY_FORNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberChanged.DAY_FORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDAY_FORNull()
            Me(Me.tableFTImemberChanged.DAY_FORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOD_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberChanged.MOD_ADDRESSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOD_ADDRESSNull()
            Me(Me.tableFTImemberChanged.MOD_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOD_NAMENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberChanged.MOD_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOD_NAMENull()
            Me(Me.tableFTImemberChanged.MOD_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOD_REPRESENTNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberChanged.MOD_REPRESENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOD_REPRESENTNull()
            Me(Me.tableFTImemberChanged.MOD_REPRESENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOD_REGISTNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberChanged.MOD_REGISTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOD_REGISTNull()
            Me(Me.tableFTImemberChanged.MOD_REGISTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOD_RETIRENull() As Boolean
            Return Me.IsNull(Me.tableFTImemberChanged.MOD_RETIREColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOD_RETIRENull()
            Me(Me.tableFTImemberChanged.MOD_RETIREColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOD_BLACKLISTNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberChanged.MOD_BLACKLISTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOD_BLACKLISTNull()
            Me(Me.tableFTImemberChanged.MOD_BLACKLISTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMOD_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableFTImemberChanged.MOD_OTHERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMOD_OTHERNull()
            Me(Me.tableFTImemberChanged.MOD_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTIrepresentInfoRow
        Inherits Global.System.Data.DataRow

        Private tableFTIrepresentInfo As FTIrepresentInfoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTIrepresentInfo = CType(Me.Table, FTIrepresentInfoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property REPRESENT_SEQ() As Integer
            Get
                Try
                    Return CType(Me(Me.tableFTIrepresentInfo.REPRESENT_SEQColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REPRESENT_SEQ' in table 'FTIrepresentInfo' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableFTIrepresentInfo.REPRESENT_SEQColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property POSITION_NAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIrepresentInfo.POSITION_NAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSITION_NAME_TH' in table 'FTIrepresentInfo' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIrepresentInfo.POSITION_NAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMP_PERSON_NAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIrepresentInfo.COMP_PERSON_NAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMP_PERSON_NAME_TH' in table 'FTIrepresentInfo' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIrepresentInfo.COMP_PERSON_NAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIrepresentInfo.MEMBER_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_CODE' in table 'FTIrepresentInfo' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIrepresentInfo.MEMBER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRENAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIrepresentInfo.PRENAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRENAME_TH' in table 'FTIrepresentInfo' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIrepresentInfo.PRENAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsREPRESENT_SEQNull() As Boolean
            Return Me.IsNull(Me.tableFTIrepresentInfo.REPRESENT_SEQColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetREPRESENT_SEQNull()
            Me(Me.tableFTIrepresentInfo.REPRESENT_SEQColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPOSITION_NAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTIrepresentInfo.POSITION_NAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPOSITION_NAME_THNull()
            Me(Me.tableFTIrepresentInfo.POSITION_NAME_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMP_PERSON_NAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTIrepresentInfo.COMP_PERSON_NAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMP_PERSON_NAME_THNull()
            Me(Me.tableFTIrepresentInfo.COMP_PERSON_NAME_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTIrepresentInfo.MEMBER_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_CODENull()
            Me(Me.tableFTIrepresentInfo.MEMBER_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRENAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTIrepresentInfo.PRENAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRENAME_THNull()
            Me(Me.tableFTIrepresentInfo.PRENAME_THColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FTIconsiderationReport1Row
        Inherits Global.System.Data.DataRow

        Private tableFTIconsiderationReport1 As FTIconsiderationReport1DataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFTIconsiderationReport1 = CType(Me.Table, FTIconsiderationReport1DataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsiderationReport1.MEMBER_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_CODE' in table 'FTIconsiderationReport1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsiderationReport1.MEMBER_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRENAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsiderationReport1.PRENAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRENAME_TH' in table 'FTIconsiderationReport1' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsiderationReport1.PRENAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property COMP_PERSON_NAME_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsiderationReport1.COMP_PERSON_NAME_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMP_PERSON_NAME_TH' in table 'FTIconsiderationReport1' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsiderationReport1.COMP_PERSON_NAME_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PRENAME_FORMAT_TH() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsiderationReport1.PRENAME_FORMAT_THColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRENAME_FORMAT_TH' in table 'FTIconsiderationReport1' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsiderationReport1.PRENAME_FORMAT_THColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADVISOR_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsiderationReport1.ADVISOR_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADVISOR_CODE' in table 'FTIconsiderationReport1' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsiderationReport1.ADVISOR_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_GROUP_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableFTIconsiderationReport1.MEMBER_GROUP_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_GROUP_NAME' in table 'FTIconsiderationReport1' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableFTIconsiderationReport1.MEMBER_GROUP_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ADVISOR_VALUE() As Double
            Get
                Try
                    Return CType(Me(Me.tableFTIconsiderationReport1.ADVISOR_VALUEColumn), Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADVISOR_VALUE' in table 'FTIconsiderationReport1' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As Double)
                Me(Me.tableFTIconsiderationReport1.ADVISOR_VALUEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MEMBER_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableFTIconsiderationReport1.MEMBER_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBER_DATE' in table 'FTIconsiderationReport1' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableFTIconsiderationReport1.MEMBER_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsiderationReport1.MEMBER_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_CODENull()
            Me(Me.tableFTIconsiderationReport1.MEMBER_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRENAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTIconsiderationReport1.PRENAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRENAME_THNull()
            Me(Me.tableFTIconsiderationReport1.PRENAME_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCOMP_PERSON_NAME_THNull() As Boolean
            Return Me.IsNull(Me.tableFTIconsiderationReport1.COMP_PERSON_NAME_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCOMP_PERSON_NAME_THNull()
            Me(Me.tableFTIconsiderationReport1.COMP_PERSON_NAME_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPRENAME_FORMAT_THNull() As Boolean
            Return Me.IsNull(Me.tableFTIconsiderationReport1.PRENAME_FORMAT_THColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPRENAME_FORMAT_THNull()
            Me(Me.tableFTIconsiderationReport1.PRENAME_FORMAT_THColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADVISOR_CODENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsiderationReport1.ADVISOR_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADVISOR_CODENull()
            Me(Me.tableFTIconsiderationReport1.ADVISOR_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_GROUP_NAMENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsiderationReport1.MEMBER_GROUP_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_GROUP_NAMENull()
            Me(Me.tableFTIconsiderationReport1.MEMBER_GROUP_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsADVISOR_VALUENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsiderationReport1.ADVISOR_VALUEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetADVISOR_VALUENull()
            Me(Me.tableFTIconsiderationReport1.ADVISOR_VALUEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMEMBER_DATENull() As Boolean
            Return Me.IsNull(Me.tableFTIconsiderationReport1.MEMBER_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMEMBER_DATENull()
            Me(Me.tableFTIconsiderationReport1.MEMBER_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FTInewApplyRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FTInewApplyRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FTInewApplyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FTInewApplyRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FTIconsideration1RowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FTIconsideration1Row

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FTIconsideration1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FTIconsideration1Row
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FTInewForApproveRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FTInewForApproveRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FTInewForApproveRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FTInewForApproveRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FTImemberConfirmRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FTImemberConfirmRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FTImemberConfirmRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FTImemberConfirmRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FTImemberApproval1RowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FTImemberApproval1Row

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FTImemberApproval1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FTImemberApproval1Row
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FTImemberApproval2RowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FTImemberApproval2Row

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FTImemberApproval2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FTImemberApproval2Row
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FTImemberChangedRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FTImemberChangedRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FTImemberChangedRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FTImemberChangedRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FTIrepresentInfoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FTIrepresentInfoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FTIrepresentInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FTIrepresentInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class FTIconsiderationReport1RowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As FTIconsiderationReport1Row

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As FTIconsiderationReport1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As FTIconsiderationReport1Row
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
